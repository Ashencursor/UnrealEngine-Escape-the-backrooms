#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MP_GameMode

#include "Basic.hpp"

#include "AdvancedSessions_structs.hpp"
#include "E_HeadsetType_structs.hpp"
#include "Backrooms_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MP_GameMode.MP_GameMode_C.ExecuteUbergraph_MP_GameMode
// 0x05B8 (0x05B8 - 0x0000)
struct MP_GameMode_C_ExecuteUbergraph_MP_GameMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEndCutscene_UI_C*                      CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Map_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsFromHub;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsExit_1;                       // 0x0079(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ServerTravel_ReturnValue;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_2;          // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_3;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_4;          // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Killed;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A8(0x0010)(ReferenceParm)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_CustomEvent_Player;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Spectator_C*>                CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0140(0x0010)(ReferenceParm)
	class ABP_Spectator_C*                        CallFunc_Array_Get_Item_2;                         // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State_1;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABPCharacter_Demo_C*>            CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0198(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_3;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewPlayer_2;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_NewPlayer_1;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller_1;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController;                    // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller_2;       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS_1;                      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_2;               // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_4;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_3;               // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item_5;                         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_6;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS_2;                      // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State_2;              // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x02D4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_Array_Get_Item_7;                         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFancyPlayerState*                      K2Node_DynamicCast_AsFancy_Player_State;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303[0x1];                                      // 0x0303(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_8;                         // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTearingDown_isTearingDown;           // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_4;               // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0357(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_2;        // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CanJoin;                        // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_3;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSessionPropertyKeyPair                CallFunc_MakeLiteralSessionPropertyBool_ReturnValue; // 0x0398(0x0020)()
	TArray<struct FSessionPropertyKeyPair>        K2Node_MakeArray_Array;                            // 0x03B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSessionSettings_NumConnections;        // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSessionSettings_NumPrivateConnections; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionSettings_bIsLAN;                // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsDedicated;          // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowInvites;         // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowJoinInProgress;  // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsAnticheatEnabled;   // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_BuildUniqueID;         // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetSessionSettings_ExtraSettings;         // 0x03E0(0x0010)(ReferenceParm)
	EBlueprintResultSwitch                        CallFunc_GetSessionSettings_Result;                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_NumConnections_1;      // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSessionSettings_NumPrivateConnections_1; // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionSettings_bIsLAN_1;              // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsDedicated_1;        // 0x03FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowInvites_1;       // 0x03FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bAllowJoinInProgress_1; // 0x03FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSessionSettings_bIsAnticheatEnabled_1; // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettings_BuildUniqueID_1;       // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSessionPropertyKeyPair>        CallFunc_GetSessionSettings_ExtraSettings_1;       // 0x0408(0x0010)(ReferenceParm)
	EBlueprintResultSwitch                        CallFunc_GetSessionSettings_Result_1;              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESessionSettingSearchResult                   CallFunc_GetSessionPropertyBool_SearchResult;      // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionPropertyBool_SettingValue;      // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSessionPropertyKeyPair>        CallFunc_AddOrModifyExtraSettings_ModifiedSettingsArray; // 0x0420(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUpdateSessionCallbackProxyAdvanced*    CallFunc_UpdateSession_ReturnValue;                // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ServerTravel_ReturnValue_1;               // 0x045A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45B[0x5];                                      // 0x045B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_4;        // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x047A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x047B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Map;                            // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsExit;                         // 0x0490(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_5;        // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A3[0x5];                                      // 0x04A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x04A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x3];                                      // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_9;                         // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStandalone_ReturnValue_5;               // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D7[0x1];                                      // 0x04D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_6;        // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ServerTravel_ReturnValue_2;               // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue_1;             // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_7;        // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMissionStructure                      CallFunc_CompleteMission_ReturnValue;              // 0x0518(0x0060)()
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_8;        // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item_10;                        // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x3];                                      // 0x0591(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0594(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_9;            // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_9;        // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode) == 0x000008, "Wrong alignment on MP_GameMode_C_ExecuteUbergraph_MP_GameMode");
static_assert(sizeof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode) == 0x0005B8, "Wrong size on MP_GameMode_C_ExecuteUbergraph_MP_GameMode");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, EntryPoint) == 0x000000, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable) == 0x000014, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Create_ReturnValue) == 0x000018, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_bool_IsClosed_Variable) == 0x000034, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_bool_Has_Been_Initd_Variable) == 0x000035, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_3) == 0x000038, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_4) == 0x00003C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_3) == 0x000040, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_4) == 0x000044, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_5) == 0x000048, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_5) == 0x00005C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_4) == 0x000060, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_5) == 0x000064, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_bool_IsClosed_Variable_1) == 0x000068, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_bool_Has_Been_Initd_Variable_1) == 0x000069, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_Map_1) == 0x000070, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_Map_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_IsFromHub) == 0x000078, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_IsFromHub' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_IsExit_1) == 0x000079, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_IsExit_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_NotEqual_NameName_ReturnValue) == 0x00007B, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Conv_NameToString_ReturnValue) == 0x000080, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_ServerTravel_ReturnValue) == 0x000090, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_ServerTravel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000091, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_NotEqual_NameName_ReturnValue_2) == 0x000092, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_NotEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_NotEqual_NameName_ReturnValue_3) == 0x000093, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_NotEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000094, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000095, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_NotEqual_NameName_ReturnValue_4) == 0x000096, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_NotEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_Killed) == 0x000098, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_Killed' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue) == 0x0000A0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x0000B8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_SwitchEnum_CmpSuccess) == 0x0000D0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_1) == 0x0000D4, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameState_ReturnValue) == 0x0000D8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_Game_State) == 0x0000E0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_Player) == 0x0000F0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_2) == 0x0000F8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue) == 0x0000FC, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000FD, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_PS) == 0x000100, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_PS' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_6) == 0x00010C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsStandalone_ReturnValue) == 0x000110, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_3) == 0x000120, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetPlayerController_ReturnValue) == 0x000128, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_Player_Controller) == 0x000130, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_Player_Controller' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000140, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_2) == 0x000150, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_4) == 0x000158, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_1) == 0x00015C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetDisplayName_ReturnValue) == 0x000160, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000170, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_6) == 0x000174, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_6) == 0x000178, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameState_ReturnValue_1) == 0x000180, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_Game_State_1) == 0x000188, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_Game_State_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_4) == 0x000190, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000198, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_7) == 0x0001A8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_5) == 0x0001AC, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_3) == 0x0001B0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_Event_NewPlayer_2) == 0x0001C0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_Event_NewPlayer_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_Event_NewPlayer_1) == 0x0001C8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_Event_NewPlayer_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_Player_Controller_1) == 0x0001D0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_5) == 0x0001D8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_K2_GetPawn_ReturnValue) == 0x0001E0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Add_ReturnValue) == 0x0001E8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0001F0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_6) == 0x0001F8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_Event_ExitingController) == 0x000200, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_Player_Controller_2) == 0x000208, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_7) == 0x000210, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000218, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_RemoveItem_ReturnValue) == 0x000220, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_1) == 0x000221, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_2) == 0x000222, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_PS_1) == 0x000228, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_PS_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_8) == 0x000230, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_AddUnique_ReturnValue) == 0x000234, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsStandalone_ReturnValue_1) == 0x000238, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_6) == 0x00023C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000240, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsStandalone_ReturnValue_2) == 0x000244, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsStandalone_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_7) == 0x000248, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetTimeSeconds_ReturnValue) == 0x00024C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_4) == 0x000250, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_8) == 0x000258, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_3) == 0x00025C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsStandalone_ReturnValue_3) == 0x00025D, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsStandalone_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_8) == 0x000260, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_9) == 0x000264, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_5) == 0x000268, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_6) == 0x000270, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_7) == 0x000278, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_Event_NewPlayer) == 0x000280, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_4) == 0x000288, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_3) == 0x000289, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_PS_2) == 0x000290, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_PS_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_9) == 0x000298, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_7) == 0x00029C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0002A0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Conv_StringToName_ReturnValue) == 0x0002B0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0002B8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameState_ReturnValue_2) == 0x0002C0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsMP_Game_State_2) == 0x0002C8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsMP_Game_State_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_10) == 0x0002D0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002D4, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_7) == 0x0002E8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_9) == 0x0002F0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_5) == 0x0002F4, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsFancy_Player_State) == 0x0002F8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsFancy_Player_State' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_11) == 0x000300, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000301, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000302, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000304, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_FClamp_ReturnValue) == 0x000308, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x000310, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_1) == 0x000320, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_8) == 0x000328, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x000330, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_12) == 0x000338, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_6) == 0x000339, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00033A, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00033B, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_8) == 0x00033C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Array_Index_Variable_10) == 0x000340, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_8) == 0x000348, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000350, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_K2_IsTearingDown_isTearingDown) == 0x000354, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_K2_IsTearingDown_isTearingDown' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Not_PreBool_ReturnValue_1) == 0x000355, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsStandalone_ReturnValue_4) == 0x000356, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsStandalone_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Not_PreBool_ReturnValue_2) == 0x000357, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_2) == 0x000358, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_BooleanAND_ReturnValue) == 0x000360, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_2) == 0x000368, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_13) == 0x000370, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_3) == 0x000378, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_CanJoin) == 0x000380, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_CanJoin' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_3) == 0x000388, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_14) == 0x000390, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_MakeLiteralSessionPropertyBool_ReturnValue) == 0x000398, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_MakeLiteralSessionPropertyBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_MakeArray_Array) == 0x0003B8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_NumConnections) == 0x0003C8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_NumConnections' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_NumPrivateConnections) == 0x0003CC, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_NumPrivateConnections' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bIsLAN) == 0x0003D0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bIsLAN' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bIsDedicated) == 0x0003D1, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bIsDedicated' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bAllowInvites) == 0x0003D2, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bAllowInvites' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bAllowJoinInProgress) == 0x0003D3, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bAllowJoinInProgress' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bIsAnticheatEnabled) == 0x0003D4, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bIsAnticheatEnabled' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_BuildUniqueID) == 0x0003D8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_BuildUniqueID' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_ExtraSettings) == 0x0003E0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_ExtraSettings' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_Result) == 0x0003F0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_Result' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_NumConnections_1) == 0x0003F4, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_NumConnections_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_NumPrivateConnections_1) == 0x0003F8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_NumPrivateConnections_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bIsLAN_1) == 0x0003FC, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bIsLAN_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bIsDedicated_1) == 0x0003FD, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bIsDedicated_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bAllowInvites_1) == 0x0003FE, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bAllowInvites_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bAllowJoinInProgress_1) == 0x0003FF, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bAllowJoinInProgress_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_bIsAnticheatEnabled_1) == 0x000400, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_bIsAnticheatEnabled_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_BuildUniqueID_1) == 0x000404, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_BuildUniqueID_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_ExtraSettings_1) == 0x000408, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_ExtraSettings_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionSettings_Result_1) == 0x000418, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionSettings_Result_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_SwitchEnum_CmpSuccess_1) == 0x000419, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_SwitchEnum_CmpSuccess_2) == 0x00041A, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionPropertyBool_SearchResult) == 0x00041B, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionPropertyBool_SearchResult' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetSessionPropertyBool_SettingValue) == 0x00041C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetSessionPropertyBool_SettingValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_AddOrModifyExtraSettings_ModifiedSettingsArray) == 0x000420, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_AddOrModifyExtraSettings_ModifiedSettingsArray' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Conv_BoolToString_ReturnValue) == 0x000430, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_UpdateSession_ReturnValue) == 0x000440, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_UpdateSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Concat_StrStr_ReturnValue) == 0x000448, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_4) == 0x000458, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_SwitchEnum_CmpSuccess_3) == 0x000459, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_ServerTravel_ReturnValue_1) == 0x00045A, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_ServerTravel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_4) == 0x000460, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_9) == 0x000468, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_4) == 0x000470, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_15) == 0x000478, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_5) == 0x000479, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00047A, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_7) == 0x00047B, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_9) == 0x00047C, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_5) == 0x000480, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_Map) == 0x000488, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_Map' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_CustomEvent_IsExit) == 0x000490, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_CustomEvent_IsExit' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_5) == 0x000498, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_16) == 0x0004A0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Not_PreBool_ReturnValue_3) == 0x0004A1, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_6) == 0x0004A2, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0004A8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0004B8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, Temp_int_Loop_Counter_Variable_10) == 0x0004BC, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_9) == 0x0004C0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_8) == 0x0004C8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Add_IntInt_ReturnValue_10) == 0x0004CC, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_10) == 0x0004D0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_9) == 0x0004D4, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsStandalone_ReturnValue_5) == 0x0004D5, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsStandalone_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Not_PreBool_ReturnValue_4) == 0x0004D6, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_6) == 0x0004D8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_6) == 0x0004E0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_17) == 0x0004E8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_ServerTravel_ReturnValue_2) == 0x0004E9, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_ServerTravel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_7) == 0x0004F0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetTimeSeconds_ReturnValue_1) == 0x0004F8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetTimeSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_7) == 0x000500, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_18) == 0x000508, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_8) == 0x000510, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_CompleteMission_ReturnValue) == 0x000518, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_CompleteMission_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_8) == 0x000578, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_19) == 0x000580, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Get_Item_10) == 0x000588, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_IsValid_ReturnValue_7) == 0x000590, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Array_Length_ReturnValue_11) == 0x000594, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000598, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_Less_IntInt_ReturnValue_10) == 0x000599, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_GetGameInstance_ReturnValue_9) == 0x0005A0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_GetGameInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_AsBP_My_Game_Instance_9) == 0x0005A8, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_AsBP_My_Game_Instance_9' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, K2Node_DynamicCast_bSuccess_20) == 0x0005B0, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ExecuteUbergraph_MP_GameMode, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0005B1, "Member 'MP_GameMode_C_ExecuteUbergraph_MP_GameMode::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.CheckMissionComplete
// 0x000C (0x000C - 0x0000)
struct MP_GameMode_C_CheckMissionComplete final
{
public:
	class FName                                   Map;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExit_0;                                          // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_CheckMissionComplete) == 0x000004, "Wrong alignment on MP_GameMode_C_CheckMissionComplete");
static_assert(sizeof(MP_GameMode_C_CheckMissionComplete) == 0x00000C, "Wrong size on MP_GameMode_C_CheckMissionComplete");
static_assert(offsetof(MP_GameMode_C_CheckMissionComplete, Map) == 0x000000, "Member 'MP_GameMode_C_CheckMissionComplete::Map' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckMissionComplete, IsExit_0) == 0x000008, "Member 'MP_GameMode_C_CheckMissionComplete::IsExit_0' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.UpdateCanJoin
// 0x0001 (0x0001 - 0x0000)
struct MP_GameMode_C_UpdateCanJoin final
{
public:
	bool                                          CanJoin;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_UpdateCanJoin) == 0x000001, "Wrong alignment on MP_GameMode_C_UpdateCanJoin");
static_assert(sizeof(MP_GameMode_C_UpdateCanJoin) == 0x000001, "Wrong size on MP_GameMode_C_UpdateCanJoin");
static_assert(offsetof(MP_GameMode_C_UpdateCanJoin, CanJoin) == 0x000000, "Member 'MP_GameMode_C_UpdateCanJoin::CanJoin' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_K2_PostLogin) == 0x000008, "Wrong alignment on MP_GameMode_C_K2_PostLogin");
static_assert(sizeof(MP_GameMode_C_K2_PostLogin) == 0x000008, "Wrong size on MP_GameMode_C_K2_PostLogin");
static_assert(offsetof(MP_GameMode_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'MP_GameMode_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_K2_OnLogout) == 0x000008, "Wrong alignment on MP_GameMode_C_K2_OnLogout");
static_assert(sizeof(MP_GameMode_C_K2_OnLogout) == 0x000008, "Wrong size on MP_GameMode_C_K2_OnLogout");
static_assert(offsetof(MP_GameMode_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'MP_GameMode_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.HandleStartingNewPlayer
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_HandleStartingNewPlayer final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_HandleStartingNewPlayer) == 0x000008, "Wrong alignment on MP_GameMode_C_HandleStartingNewPlayer");
static_assert(sizeof(MP_GameMode_C_HandleStartingNewPlayer) == 0x000008, "Wrong size on MP_GameMode_C_HandleStartingNewPlayer");
static_assert(offsetof(MP_GameMode_C_HandleStartingNewPlayer, NewPlayer) == 0x000000, "Member 'MP_GameMode_C_HandleStartingNewPlayer::NewPlayer' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.K2_OnRestartPlayer
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_K2_OnRestartPlayer final
{
public:
	class AController*                            NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_K2_OnRestartPlayer) == 0x000008, "Wrong alignment on MP_GameMode_C_K2_OnRestartPlayer");
static_assert(sizeof(MP_GameMode_C_K2_OnRestartPlayer) == 0x000008, "Wrong size on MP_GameMode_C_K2_OnRestartPlayer");
static_assert(offsetof(MP_GameMode_C_K2_OnRestartPlayer, NewPlayer) == 0x000000, "Member 'MP_GameMode_C_K2_OnRestartPlayer::NewPlayer' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.OnPlayerSpawn
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_OnPlayerSpawn final
{
public:
	class ABPCharacter_Demo_C*                    Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_OnPlayerSpawn) == 0x000008, "Wrong alignment on MP_GameMode_C_OnPlayerSpawn");
static_assert(sizeof(MP_GameMode_C_OnPlayerSpawn) == 0x000008, "Wrong size on MP_GameMode_C_OnPlayerSpawn");
static_assert(offsetof(MP_GameMode_C_OnPlayerSpawn, Player) == 0x000000, "Member 'MP_GameMode_C_OnPlayerSpawn::Player' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.OnPlayerKilled
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_OnPlayerKilled final
{
public:
	class ABPCharacter_Demo_C*                    Killed;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_OnPlayerKilled) == 0x000008, "Wrong alignment on MP_GameMode_C_OnPlayerKilled");
static_assert(sizeof(MP_GameMode_C_OnPlayerKilled) == 0x000008, "Wrong size on MP_GameMode_C_OnPlayerKilled");
static_assert(offsetof(MP_GameMode_C_OnPlayerKilled, Killed) == 0x000000, "Member 'MP_GameMode_C_OnPlayerKilled::Killed' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.LoadLevel
// 0x000C (0x000C - 0x0000)
struct MP_GameMode_C_LoadLevel final
{
public:
	class FName                                   Map;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromHub;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsExit_0;                                          // 0x0009(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_LoadLevel) == 0x000004, "Wrong alignment on MP_GameMode_C_LoadLevel");
static_assert(sizeof(MP_GameMode_C_LoadLevel) == 0x00000C, "Wrong size on MP_GameMode_C_LoadLevel");
static_assert(offsetof(MP_GameMode_C_LoadLevel, Map) == 0x000000, "Member 'MP_GameMode_C_LoadLevel::Map' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_LoadLevel, IsFromHub) == 0x000008, "Member 'MP_GameMode_C_LoadLevel::IsFromHub' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_LoadLevel, IsExit_0) == 0x000009, "Member 'MP_GameMode_C_LoadLevel::IsExit_0' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.AddToZone
// 0x0100 (0x0100 - 0x0000)
struct MP_GameMode_C_AddToZone final
{
public:
	class FName                                   Level;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFromHub;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAnExit;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DidFinish;                                         // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        K2Node_DynamicCast_AsMP_Game_State;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_AddToZone) == 0x000008, "Wrong alignment on MP_GameMode_C_AddToZone");
static_assert(sizeof(MP_GameMode_C_AddToZone) == 0x000100, "Wrong size on MP_GameMode_C_AddToZone");
static_assert(offsetof(MP_GameMode_C_AddToZone, Level) == 0x000000, "Member 'MP_GameMode_C_AddToZone::Level' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, IsFromHub) == 0x000008, "Member 'MP_GameMode_C_AddToZone::IsFromHub' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, IsAnExit) == 0x000009, "Member 'MP_GameMode_C_AddToZone::IsAnExit' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, DidFinish) == 0x00000A, "Member 'MP_GameMode_C_AddToZone::DidFinish' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, Temp_int_Variable) == 0x00000C, "Member 'MP_GameMode_C_AddToZone::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'MP_GameMode_C_AddToZone::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'MP_GameMode_C_AddToZone::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000028, "Member 'MP_GameMode_C_AddToZone::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MP_GameMode_C_AddToZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'MP_GameMode_C_AddToZone::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'MP_GameMode_C_AddToZone::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_GetGameInstance_ReturnValue_1) == 0x000050, "Member 'MP_GameMode_C_AddToZone::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, K2Node_DynamicCast_AsBP_My_Game_Instance_1) == 0x000058, "Member 'MP_GameMode_C_AddToZone::K2Node_DynamicCast_AsBP_My_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'MP_GameMode_C_AddToZone::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'MP_GameMode_C_AddToZone::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, K2Node_DynamicCast_AsMP_Game_State) == 0x000070, "Member 'MP_GameMode_C_AddToZone::K2Node_DynamicCast_AsMP_Game_State' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'MP_GameMode_C_AddToZone::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000079, "Member 'MP_GameMode_C_AddToZone::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00007A, "Member 'MP_GameMode_C_AddToZone::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'MP_GameMode_C_AddToZone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'MP_GameMode_C_AddToZone::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'MP_GameMode_C_AddToZone::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'MP_GameMode_C_AddToZone::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000A0, "Member 'MP_GameMode_C_AddToZone::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'MP_GameMode_C_AddToZone::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'MP_GameMode_C_AddToZone::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C8, "Member 'MP_GameMode_C_AddToZone::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'MP_GameMode_C_AddToZone::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'MP_GameMode_C_AddToZone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E8, "Member 'MP_GameMode_C_AddToZone::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000F8, "Member 'MP_GameMode_C_AddToZone::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'MP_GameMode_C_AddToZone::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_AddToZone, CallFunc_BooleanOR_ReturnValue_2) == 0x0000FA, "Member 'MP_GameMode_C_AddToZone::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.RemoveFromZone
// 0x0008 (0x0008 - 0x0000)
struct MP_GameMode_C_RemoveFromZone final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_RemoveFromZone) == 0x000004, "Wrong alignment on MP_GameMode_C_RemoveFromZone");
static_assert(sizeof(MP_GameMode_C_RemoveFromZone) == 0x000008, "Wrong size on MP_GameMode_C_RemoveFromZone");
static_assert(offsetof(MP_GameMode_C_RemoveFromZone, Temp_int_Variable) == 0x000000, "Member 'MP_GameMode_C_RemoveFromZone::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_RemoveFromZone, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'MP_GameMode_C_RemoveFromZone::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.IsSingleplayer
// 0x0018 (0x0018 - 0x0000)
struct MP_GameMode_C_IsSingleplayer final
{
public:
	bool                                          Singleplayer;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_IsSingleplayer) == 0x000008, "Wrong alignment on MP_GameMode_C_IsSingleplayer");
static_assert(sizeof(MP_GameMode_C_IsSingleplayer) == 0x000018, "Wrong size on MP_GameMode_C_IsSingleplayer");
static_assert(offsetof(MP_GameMode_C_IsSingleplayer, Singleplayer) == 0x000000, "Member 'MP_GameMode_C_IsSingleplayer::Singleplayer' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_IsSingleplayer, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'MP_GameMode_C_IsSingleplayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_IsSingleplayer, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'MP_GameMode_C_IsSingleplayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_IsSingleplayer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'MP_GameMode_C_IsSingleplayer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.KickPlayer
// 0x0020 (0x0020 - 0x0000)
struct MP_GameMode_C_KickPlayer final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 K2Node_DynamicCast_AsMP_Player_Controller;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_KickPlayer) == 0x000008, "Wrong alignment on MP_GameMode_C_KickPlayer");
static_assert(sizeof(MP_GameMode_C_KickPlayer) == 0x000020, "Wrong size on MP_GameMode_C_KickPlayer");
static_assert(offsetof(MP_GameMode_C_KickPlayer, PlayerState) == 0x000000, "Member 'MP_GameMode_C_KickPlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_KickPlayer, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'MP_GameMode_C_KickPlayer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_KickPlayer, K2Node_DynamicCast_AsMP_Player_Controller) == 0x000010, "Member 'MP_GameMode_C_KickPlayer::K2Node_DynamicCast_AsMP_Player_Controller' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_KickPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MP_GameMode_C_KickPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_KickPlayer, CallFunc_KickPlayer_ReturnValue) == 0x000019, "Member 'MP_GameMode_C_KickPlayer::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.CheckAchievements
// 0x0040 (0x0040 - 0x0000)
struct MP_GameMode_C_CheckAchievements final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_CheckAchievements) == 0x000008, "Wrong alignment on MP_GameMode_C_CheckAchievements");
static_assert(sizeof(MP_GameMode_C_CheckAchievements) == 0x000040, "Wrong size on MP_GameMode_C_CheckAchievements");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'MP_GameMode_C_CheckAchievements::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'MP_GameMode_C_CheckAchievements::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000018, "Member 'MP_GameMode_C_CheckAchievements::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MP_GameMode_C_CheckAchievements::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000021, "Member 'MP_GameMode_C_CheckAchievements::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x000028, "Member 'MP_GameMode_C_CheckAchievements::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, CallFunc_IsStandalone_ReturnValue) == 0x000038, "Member 'MP_GameMode_C_CheckAchievements::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_CheckAchievements, K2Node_SwitchString_CmpSuccess) == 0x000039, "Member 'MP_GameMode_C_CheckAchievements::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.FinishGameAchievement
// 0x0048 (0x0048 - 0x0000)
struct MP_GameMode_C_FinishGameAchievement final
{
public:
	class FName                                   AchievementName;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_FinishGameAchievement) == 0x000008, "Wrong alignment on MP_GameMode_C_FinishGameAchievement");
static_assert(sizeof(MP_GameMode_C_FinishGameAchievement) == 0x000048, "Wrong size on MP_GameMode_C_FinishGameAchievement");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, AchievementName) == 0x000000, "Member 'MP_GameMode_C_FinishGameAchievement::AchievementName' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, Temp_int_Array_Index_Variable) == 0x000008, "Member 'MP_GameMode_C_FinishGameAchievement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'MP_GameMode_C_FinishGameAchievement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_Array_Get_Item) == 0x000028, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000030, "Member 'MP_GameMode_C_FinishGameAchievement::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'MP_GameMode_C_FinishGameAchievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'MP_GameMode_C_FinishGameAchievement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_FinishGameAchievement, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'MP_GameMode_C_FinishGameAchievement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.ChoosePlayerStart
// 0x00A0 (0x00A0 - 0x0000)
struct MP_GameMode_C_ChoosePlayerStart final
{
public:
	class AController*                            Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           PlayerStart;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Random_OutItem;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_ChoosePlayerStart) == 0x000008, "Wrong alignment on MP_GameMode_C_ChoosePlayerStart");
static_assert(sizeof(MP_GameMode_C_ChoosePlayerStart) == 0x0000A0, "Wrong size on MP_GameMode_C_ChoosePlayerStart");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, Player) == 0x000000, "Member 'MP_GameMode_C_ChoosePlayerStart::Player' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, ReturnValue) == 0x000008, "Member 'MP_GameMode_C_ChoosePlayerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, PlayerStart) == 0x000010, "Member 'MP_GameMode_C_ChoosePlayerStart::PlayerStart' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'MP_GameMode_C_ChoosePlayerStart::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'MP_GameMode_C_ChoosePlayerStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'MP_GameMode_C_ChoosePlayerStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Array_Random_OutItem) == 0x000030, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Array_Random_OutIndex) == 0x000038, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Array_Get_Item) == 0x000040, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, K2Node_MakeArray_Array) == 0x000068, "Member 'MP_GameMode_C_ChoosePlayerStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, Temp_object_Variable) == 0x000078, "Member 'MP_GameMode_C_ChoosePlayerStart::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_SphereOverlapActors_OutActors) == 0x000088, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_ChoosePlayerStart, CallFunc_SphereOverlapActors_ReturnValue) == 0x000098, "Member 'MP_GameMode_C_ChoosePlayerStart::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.GetAdjustedTime
// 0x000C (0x000C - 0x0000)
struct MP_GameMode_C_GetAdjustedTime final
{
public:
	float                                         AdjustedTime;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_GetAdjustedTime) == 0x000004, "Wrong alignment on MP_GameMode_C_GetAdjustedTime");
static_assert(sizeof(MP_GameMode_C_GetAdjustedTime) == 0x00000C, "Wrong size on MP_GameMode_C_GetAdjustedTime");
static_assert(offsetof(MP_GameMode_C_GetAdjustedTime, AdjustedTime) == 0x000000, "Member 'MP_GameMode_C_GetAdjustedTime::AdjustedTime' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetAdjustedTime, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'MP_GameMode_C_GetAdjustedTime::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetAdjustedTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'MP_GameMode_C_GetAdjustedTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.SetPlayerColor
// 0x0058 (0x0058 - 0x0000)
struct MP_GameMode_C_SetPlayerColor final
{
public:
	class ABPCharacter_Demo_C*                    PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   CallFunc_GetPlayerStateArray_ReturnValue;          // 0x0030(0x0010)(ReferenceParm)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_SetPlayerColor) == 0x000008, "Wrong alignment on MP_GameMode_C_SetPlayerColor");
static_assert(sizeof(MP_GameMode_C_SetPlayerColor) == 0x000058, "Wrong size on MP_GameMode_C_SetPlayerColor");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, PlayerState) == 0x000000, "Member 'MP_GameMode_C_SetPlayerColor::PlayerState' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, K2Node_MakeStruct_LinearColor) == 0x000008, "Member 'MP_GameMode_C_SetPlayerColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, K2Node_MakeStruct_LinearColor_1) == 0x000018, "Member 'MP_GameMode_C_SetPlayerColor::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'MP_GameMode_C_SetPlayerColor::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, CallFunc_GetPlayerStateArray_ReturnValue) == 0x000030, "Member 'MP_GameMode_C_SetPlayerColor::CallFunc_GetPlayerStateArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, K2Node_MakeStruct_LinearColor_2) == 0x000040, "Member 'MP_GameMode_C_SetPlayerColor::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, CallFunc_Array_Find_ReturnValue) == 0x000050, "Member 'MP_GameMode_C_SetPlayerColor::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SetPlayerColor, K2Node_SwitchInteger_CmpSuccess) == 0x000054, "Member 'MP_GameMode_C_SetPlayerColor::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.GetPlayerStarts
// 0x0058 (0x0058 - 0x0000)
struct MP_GameMode_C_GetPlayerStarts final
{
public:
	TArray<class APlayerStart*>                   Starts;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0010(0x0010)(ReferenceParm)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClassWithTag_OutActors_1;   // 0x0020(0x0010)(ReferenceParm)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClassWithTag_OutActors_2;   // 0x0030(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_GetPlayerStarts) == 0x000008, "Wrong alignment on MP_GameMode_C_GetPlayerStarts");
static_assert(sizeof(MP_GameMode_C_GetPlayerStarts) == 0x000058, "Wrong size on MP_GameMode_C_GetPlayerStarts");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, Starts) == 0x000000, "Member 'MP_GameMode_C_GetPlayerStarts::Starts' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000010, "Member 'MP_GameMode_C_GetPlayerStarts::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, CallFunc_GetAllActorsOfClassWithTag_OutActors_1) == 0x000020, "Member 'MP_GameMode_C_GetPlayerStarts::CallFunc_GetAllActorsOfClassWithTag_OutActors_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, CallFunc_GetAllActorsOfClassWithTag_OutActors_2) == 0x000030, "Member 'MP_GameMode_C_GetPlayerStarts::CallFunc_GetAllActorsOfClassWithTag_OutActors_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'MP_GameMode_C_GetPlayerStarts::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000048, "Member 'MP_GameMode_C_GetPlayerStarts::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetPlayerStarts, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'MP_GameMode_C_GetPlayerStarts::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.SaveAll
// 0x0030 (0x0030 - 0x0000)
struct MP_GameMode_C_SaveAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerController_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MP_GameMode_C_SaveAll) == 0x000008, "Wrong alignment on MP_GameMode_C_SaveAll");
static_assert(sizeof(MP_GameMode_C_SaveAll) == 0x000030, "Wrong size on MP_GameMode_C_SaveAll");
static_assert(offsetof(MP_GameMode_C_SaveAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MP_GameMode_C_SaveAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MP_GameMode_C_SaveAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MP_GameMode_C_SaveAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'MP_GameMode_C_SaveAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'MP_GameMode_C_SaveAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'MP_GameMode_C_SaveAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, K2Node_DynamicCast_AsMP_PS) == 0x000020, "Member 'MP_GameMode_C_SaveAll::K2Node_DynamicCast_AsMP_PS' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_SaveAll, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'MP_GameMode_C_SaveAll::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MP_GameMode.MP_GameMode_C.GetDefaultPawnClassForController
// 0x00E0 (0x00E0 - 0x0000)
struct MP_GameMode_C_GetDefaultPawnClassForController final
{
public:
	class AController*                            InController;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0028(0x0020)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_HeadsetType                                 CallFunc_Map_Find_Value;                           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MP_GameMode_C_GetDefaultPawnClassForController) == 0x000008, "Wrong alignment on MP_GameMode_C_GetDefaultPawnClassForController");
static_assert(sizeof(MP_GameMode_C_GetDefaultPawnClassForController) == 0x0000E0, "Wrong size on MP_GameMode_C_GetDefaultPawnClassForController");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, InController) == 0x000000, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::InController' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, ReturnValue) == 0x000008, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_IsLocalController_ReturnValue) == 0x000010, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_IsLocalController_ReturnValue_1) == 0x000011, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_IsLocalController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, K2Node_DynamicCast_AsMP_PS) == 0x000018, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::K2Node_DynamicCast_AsMP_PS' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000028, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_UniqueNetIdToString_String) == 0x000050, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_UniqueNetIdToString_String' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, K2Node_SwitchEnum_CmpSuccess_1) == 0x000060, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x000088, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_IsStandalone_ReturnValue) == 0x0000A0, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_GetGameInstance_ReturnValue) == 0x0000A8, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x0000B0, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_Map_Find_Value) == 0x0000B9, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_Map_Find_ReturnValue) == 0x0000BA, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000C0, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MP_GameMode_C_GetDefaultPawnClassForController, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'MP_GameMode_C_GetDefaultPawnClassForController::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

}

