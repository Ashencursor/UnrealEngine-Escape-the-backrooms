#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MothJelly

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Backrooms_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MothJelly.BP_MothJelly_C.ExecuteUbergraph_BP_MothJelly
// 0x01C0 (0x01C0 - 0x0000)
struct BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PS_C*                               K2Node_DynamicCast_AsMP_PS;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0114(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Enable;                               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEventType                                    K2Node_Event_EventType;                            // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly) == 0x000008, "Wrong alignment on BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly");
static_assert(sizeof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly) == 0x0001C0, "Wrong size on BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, EntryPoint) == 0x000000, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_SetStaticMesh_ReturnValue) == 0x000004, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CustomEvent_NotifyName_4) == 0x000008, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CustomEvent_NotifyName_3) == 0x000010, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CustomEvent_NotifyName_2) == 0x000028, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CustomEvent_NotifyName_1) == 0x000040, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CustomEvent_NotifyName) == 0x000058, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, Temp_name_Variable) == 0x000070, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_Lerp_ReturnValue_1) == 0x00007C, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, Temp_bool_Variable) == 0x00008C, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, Temp_object_Variable) == 0x000090, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, Temp_object_Variable_1) == 0x000098, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_GetAttachParentActor_ReturnValue) == 0x0000A0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x0000A8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000B4, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_DynamicCast_AsMP_PS) == 0x0000C8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_DynamicCast_AsMP_PS' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_GetOwner_ReturnValue) == 0x0000D8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_DynamicCast_AsBPCharacter_Demo_1) == 0x0000E0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_DynamicCast_AsBPCharacter_Demo_1' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000E9, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000F0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_BreakVector_X) == 0x0000FC, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_BreakVector_Y) == 0x000100, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_BreakVector_Z) == 0x000104, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000114, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0001A0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_Event_Enable) == 0x0001A8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_Event_Enable' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_Event_EventType) == 0x0001A9, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, K2Node_Select_Default) == 0x0001B0, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly, CallFunc_SetStaticMesh_ReturnValue_1) == 0x0001B8, "Member 'BP_MothJelly_C_ExecuteUbergraph_BP_MothJelly::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.OnCompleted_1CCDCF174099237E391B5AA1C23BF140
// 0x0008 (0x0008 - 0x0000)
struct BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140) == 0x000004, "Wrong alignment on BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140");
static_assert(sizeof(BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140) == 0x000008, "Wrong size on BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140");
static_assert(offsetof(BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140, NotifyName) == 0x000000, "Member 'BP_MothJelly_C_OnCompleted_1CCDCF174099237E391B5AA1C23BF140::NotifyName' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.OnBlendOut_1CCDCF174099237E391B5AA1C23BF140
// 0x0008 (0x0008 - 0x0000)
struct BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140) == 0x000004, "Wrong alignment on BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140");
static_assert(sizeof(BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140) == 0x000008, "Wrong size on BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140");
static_assert(offsetof(BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140, NotifyName) == 0x000000, "Member 'BP_MothJelly_C_OnBlendOut_1CCDCF174099237E391B5AA1C23BF140::NotifyName' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.OnInterrupted_1CCDCF174099237E391B5AA1C23BF140
// 0x0008 (0x0008 - 0x0000)
struct BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140) == 0x000004, "Wrong alignment on BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140");
static_assert(sizeof(BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140) == 0x000008, "Wrong size on BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140");
static_assert(offsetof(BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140, NotifyName) == 0x000000, "Member 'BP_MothJelly_C_OnInterrupted_1CCDCF174099237E391B5AA1C23BF140::NotifyName' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140
// 0x0008 (0x0008 - 0x0000)
struct BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140) == 0x000004, "Wrong alignment on BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140");
static_assert(sizeof(BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140) == 0x000008, "Wrong size on BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140");
static_assert(offsetof(BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140, NotifyName) == 0x000000, "Member 'BP_MothJelly_C_OnNotifyBegin_1CCDCF174099237E391B5AA1C23BF140::NotifyName' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140
// 0x0008 (0x0008 - 0x0000)
struct BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140) == 0x000004, "Wrong alignment on BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140");
static_assert(sizeof(BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140) == 0x000008, "Wrong size on BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140");
static_assert(offsetof(BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140, NotifyName) == 0x000000, "Member 'BP_MothJelly_C_OnNotifyEnd_1CCDCF174099237E391B5AA1C23BF140::NotifyName' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.OnEventLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_MothJelly_C_OnEventLoaded final
{
public:
	EEventType                                    EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MothJelly_C_OnEventLoaded) == 0x000001, "Wrong alignment on BP_MothJelly_C_OnEventLoaded");
static_assert(sizeof(BP_MothJelly_C_OnEventLoaded) == 0x000001, "Wrong size on BP_MothJelly_C_OnEventLoaded");
static_assert(offsetof(BP_MothJelly_C_OnEventLoaded, EventType) == 0x000000, "Member 'BP_MothJelly_C_OnEventLoaded::EventType' has a wrong offset!");

// Function BP_MothJelly.BP_MothJelly_C.ToggleEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_MothJelly_C_ToggleEvent final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MothJelly_C_ToggleEvent) == 0x000001, "Wrong alignment on BP_MothJelly_C_ToggleEvent");
static_assert(sizeof(BP_MothJelly_C_ToggleEvent) == 0x000001, "Wrong size on BP_MothJelly_C_ToggleEvent");
static_assert(offsetof(BP_MothJelly_C_ToggleEvent, Enable) == 0x000000, "Member 'BP_MothJelly_C_ToggleEvent::Enable' has a wrong offset!");

}

