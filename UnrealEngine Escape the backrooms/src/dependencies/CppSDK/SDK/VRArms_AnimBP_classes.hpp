#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VRArms_AnimBP

#include "Basic.hpp"

#include "DragonIKPlugin_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "OpenInputPlugin_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass VRArms_AnimBP.VRArms_AnimBP_C
// 0x3E30 (0x40F0 - 0x02C0)
class UVRArms_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x02C8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x03D0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x03F8(0x0158)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x0550(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x0610(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x0638(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x0660(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x0688(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x06B0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x06D8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x0700(0x00A0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x07A0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0820(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x0850(0x00B0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x0900(0x00C0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x09C0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x0A40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0AC0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0B40(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x0BC0(0x0080)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0C40(0x0020)()
	struct FAnimNode_DragonAimSolver              AnimGraphNode_DragonAimSolver_1;                   // 0x0C60(0x09D0)()
	struct FAnimNode_DragonAimSolver              AnimGraphNode_DragonAimSolver;                     // 0x1630(0x09D0)()
	struct FAnimNode_ApplyLimits                  AnimGraphNode_ApplyLimits_1;                       // 0x2000(0x00E8)()
	struct FAnimNode_ApplyLimits                  AnimGraphNode_ApplyLimits;                         // 0x20E8(0x00E8)()
	struct FAnimNode_MeshSpaceRefPose             AnimGraphNode_MeshRefPose;                         // 0x21D0(0x0010)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x21E0(0x0158)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2338(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2358(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2378(0x0108)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x2480(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x24A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x24D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x24F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2520(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2548(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x2570(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2598(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x25C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2640(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x2670(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x26F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2720(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x27A0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x27D0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2850(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2880(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2900(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2930(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x29E0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x2A28(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2B80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2BA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2BD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2BF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2C20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2C48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2C70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2C98(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2CC0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2D40(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2D70(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2DF0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2E20(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2EA0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2ED0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2F50(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2F80(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x3000(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x3030(0x00B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x30E0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x3128(0x0158)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3280(0x00A0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x3320(0x00C0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x33E0(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x34A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x34C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x34F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x3518(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x3540(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x3568(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x3590(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x35B8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x35E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x3608(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x3630(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x3788(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x37B0(0x0158)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x3908(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x3950(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x3978(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x3AD0(0x0158)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3C28(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x3D80(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x3DA8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3DD0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3DF8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x3E20(0x0030)()
	class UAnimSequence*                          Idle;                                              // 0x3E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClimbing;                                        // 0x3E58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E59[0x7];                                     // 0x3E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMotionControllerComponent*             LeftController;                                    // 0x3E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMotionControllerComponent*             RightController;                                   // 0x3E68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             LeftHandTransform;                                 // 0x3E70(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             RightHandTransform;                                // 0x3EA0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsUsingItem;                                       // 0x3ED0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingItem;                                     // 0x3ED1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingFlashlight;                                 // 0x3ED2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingSpray;                                      // 0x3ED3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED4[0x4];                                     // 0x3ED4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDragonData_Overrided_Location_Data    LeftArmData;                                       // 0x3ED8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDragonData_Overrided_Location_Data    RightArmData;                                      // 0x3EE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   LeftGesture;                                       // 0x3EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RightGesture;                                      // 0x3F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F08[0x8];                                     // 0x3F08(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPOpenVRActionInfo                    LeftActionInput;                                   // 0x3F10(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FBPOpenVRActionInfo                    RightActionInput;                                  // 0x4000(0x00F0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_VRArms_AnimBP(int32 EntryPoint);
	void Offset_Hands();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_F4B3FB6642741E6D0D65ECB400A8A218();
	void UpdateGesture();
	void Update_Hand_Transforms();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_17227A1A47A9A222D66DFF961CF918E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_E5DED5204E32B49FBDC40F8CB351C0BB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_7BF8A07C4905D64A40E9B0B7612C764C();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_CFF585024BC2C11116CC8AA9A4521B6C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_853D1999452A549D96EF609CD28427E8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_A0A7FBC94D92372D5386AD9A7C1DAB4C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_6B3DF33B4A635465756F12AA10C8431A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_6AE123D24A4C0691E1BEBD95A1307D65();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_EB2EA30A404DBBF4D439D3AE593D7A6A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_ModifyBone_7D40F9FA41C1C6E9C29247B3EB39742D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_BlendListByBool_3808BE77431293C83C6E97B54177DA68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_ModifyBone_53B81D8A43C436A17BED4DA6AA038FA1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_BlendListByBool_70C60F484EC1090B73B00F8568C3A25C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_00B21D7E4B6967729A6821BC92C8CA96();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_EC12F87C4B23E9F5FF2C6892A59EB0E0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_89C973DF4F97A42366E49E8CFA3BFFBD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_02C4E37F4A266304F5E87EBB24E1C127();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_6CAF8E8A42F9B645CF4253A93D3C9EC8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_VRArms_AnimBP_AnimGraphNode_TransitionResult_DCA013224A580AEB21CFE6AF96513707();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"VRArms_AnimBP_C">();
	}
	static class UVRArms_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVRArms_AnimBP_C>();
	}
};
static_assert(alignof(UVRArms_AnimBP_C) == 0x000010, "Wrong alignment on UVRArms_AnimBP_C");
static_assert(sizeof(UVRArms_AnimBP_C) == 0x0040F0, "Wrong size on UVRArms_AnimBP_C");
static_assert(offsetof(UVRArms_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UVRArms_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x0002C8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_22) == 0x0003D0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_8) == 0x0003F8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_LayeredBoneBlend_3) == 0x000550, "Member 'UVRArms_AnimBP_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_21) == 0x000610, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_20) == 0x000638, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_19) == 0x000660, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_18) == 0x000688, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_17) == 0x0006B0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_16) == 0x0006D8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x000700, "Member 'UVRArms_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_15) == 0x0007A0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_10) == 0x000820, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateMachine_2) == 0x000850, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_LayeredBoneBlend_2) == 0x000900, "Member 'UVRArms_AnimBP_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_14) == 0x0009C0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x000A40, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x000AC0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000B40, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x000BC0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000C40, "Member 'UVRArms_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_DragonAimSolver_1) == 0x000C60, "Member 'UVRArms_AnimBP_C::AnimGraphNode_DragonAimSolver_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_DragonAimSolver) == 0x001630, "Member 'UVRArms_AnimBP_C::AnimGraphNode_DragonAimSolver' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_ApplyLimits_1) == 0x002000, "Member 'UVRArms_AnimBP_C::AnimGraphNode_ApplyLimits_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_ApplyLimits) == 0x0020E8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_ApplyLimits' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_MeshRefPose) == 0x0021D0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_MeshRefPose' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_7) == 0x0021E0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x002338, "Member 'UVRArms_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x002358, "Member 'UVRArms_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_ModifyBone) == 0x002378, "Member 'UVRArms_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x002480, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x0024A8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0024D0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x0024F8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x002520, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x002548, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x002570, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x002598, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x0025C0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_9) == 0x002640, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x002670, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_8) == 0x0026F0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x002720, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_7) == 0x0027A0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0027D0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_6) == 0x002850, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x002880, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_5) == 0x002900, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x002930, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_Slot_2) == 0x0029E0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_6) == 0x002A28, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x002B80, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x002BA8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x002BD0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x002BF8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x002C20, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x002C48, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x002C70, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_TransitionResult) == 0x002C98, "Member 'UVRArms_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x002CC0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_4) == 0x002D40, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x002D70, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_3) == 0x002DF0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x002E20, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_2) == 0x002EA0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x002ED0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult_1) == 0x002F50, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x002F80, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateResult) == 0x003000, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_StateMachine) == 0x003030, "Member 'UVRArms_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_Slot_1) == 0x0030E0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_5) == 0x003128, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x003280, "Member 'UVRArms_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x003320, "Member 'UVRArms_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x0033E0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_15) == 0x0034A0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_14) == 0x0034C8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_13) == 0x0034F0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_12) == 0x003518, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_11) == 0x003540, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_10) == 0x003568, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_9) == 0x003590, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_8) == 0x0035B8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_7) == 0x0035E0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x003608, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_4) == 0x003630, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x003788, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_3) == 0x0037B0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_Slot) == 0x003908, "Member 'UVRArms_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x003950, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_2) == 0x003978, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x003AD0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x003C28, "Member 'UVRArms_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x003D80, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x003DA8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x003DD0, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x003DF8, "Member 'UVRArms_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, AnimGraphNode_Root) == 0x003E20, "Member 'UVRArms_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, Idle) == 0x003E50, "Member 'UVRArms_AnimBP_C::Idle' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, IsClimbing) == 0x003E58, "Member 'UVRArms_AnimBP_C::IsClimbing' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, LeftController) == 0x003E60, "Member 'UVRArms_AnimBP_C::LeftController' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, RightController) == 0x003E68, "Member 'UVRArms_AnimBP_C::RightController' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, LeftHandTransform) == 0x003E70, "Member 'UVRArms_AnimBP_C::LeftHandTransform' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, RightHandTransform) == 0x003EA0, "Member 'UVRArms_AnimBP_C::RightHandTransform' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, IsUsingItem) == 0x003ED0, "Member 'UVRArms_AnimBP_C::IsUsingItem' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, IsHoldingItem) == 0x003ED1, "Member 'UVRArms_AnimBP_C::IsHoldingItem' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, HoldingFlashlight) == 0x003ED2, "Member 'UVRArms_AnimBP_C::HoldingFlashlight' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, HoldingSpray) == 0x003ED3, "Member 'UVRArms_AnimBP_C::HoldingSpray' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, LeftArmData) == 0x003ED8, "Member 'UVRArms_AnimBP_C::LeftArmData' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, RightArmData) == 0x003EE8, "Member 'UVRArms_AnimBP_C::RightArmData' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, LeftGesture) == 0x003EF8, "Member 'UVRArms_AnimBP_C::LeftGesture' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, RightGesture) == 0x003F00, "Member 'UVRArms_AnimBP_C::RightGesture' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, LeftActionInput) == 0x003F10, "Member 'UVRArms_AnimBP_C::LeftActionInput' has a wrong offset!");
static_assert(offsetof(UVRArms_AnimBP_C, RightActionInput) == 0x004000, "Member 'UVRArms_AnimBP_C::RightActionInput' has a wrong offset!");

}

