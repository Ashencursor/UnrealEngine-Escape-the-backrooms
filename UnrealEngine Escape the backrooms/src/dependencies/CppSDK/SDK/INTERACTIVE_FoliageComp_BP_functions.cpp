#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACTIVE_FoliageComp_BP

#include "Basic.hpp"

#include "INTERACTIVE_FoliageComp_BP_classes.hpp"
#include "INTERACTIVE_FoliageComp_BP_parameters.hpp"


namespace SDK
{

// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.UnloadedViaStreaming__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UINTERACTIVE_FoliageComp_BP_C::UnloadedViaStreaming__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "UnloadedViaStreaming__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ExecuteUbergraph_INTERACTIVE_FoliageComp_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::ExecuteUbergraph_INTERACTIVE_FoliageComp_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ExecuteUbergraph_INTERACTIVE_FoliageComp_BP");

	Params::INTERACTIVE_FoliageComp_BP_C_ExecuteUbergraph_INTERACTIVE_FoliageComp_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.DivideIntoChunks_InfLoopWorkaround
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ChunkSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::DivideIntoChunks_InfLoopWorkaround(float ChunkSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "DivideIntoChunks_InfLoopWorkaround");

	Params::INTERACTIVE_FoliageComp_BP_C_DivideIntoChunks_InfLoopWorkaround Parms{};

	Parms.ChunkSize = ChunkSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ReceiveEndPlay");

	Params::INTERACTIVE_FoliageComp_BP_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UINTERACTIVE_FoliageComp_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.AddInstanceStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInstanceStatus                         Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::AddInstanceStatus(int32 InstanceIndex, EInstanceStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "AddInstanceStatus");

	Params::INTERACTIVE_FoliageComp_BP_C_AddInstanceStatus Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.RemoveInstanceStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInstanceStatus                         Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::RemoveInstanceStatus(int32 InstanceIndex, EInstanceStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "RemoveInstanceStatus");

	Params::INTERACTIVE_FoliageComp_BP_C_RemoveInstanceStatus Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.IsTrampled?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    _                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UINTERACTIVE_FoliageComp_BP_C::IsTrampled_(int32 InstanceIndex, bool* _)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "IsTrampled?");

	Params::INTERACTIVE_FoliageComp_BP_C_IsTrampled_ Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (_ != nullptr)
		*_ = Parms._;
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.RemoveAnyActiveStatuses
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::RemoveAnyActiveStatuses(int32 InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "RemoveAnyActiveStatuses");

	Params::INTERACTIVE_FoliageComp_BP_C_RemoveAnyActiveStatuses Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.Copy&SetFoliageParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UINTERACTIVE_FoliageComp_BP_C*    CopyFrom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::Copy_SetFoliageParameters(class UINTERACTIVE_FoliageComp_BP_C* CopyFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "Copy&SetFoliageParameters");

	Params::INTERACTIVE_FoliageComp_BP_C_Copy_SetFoliageParameters Parms{};

	Parms.CopyFrom = CopyFrom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.Copy&SetFoliageParameters_FromClass
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CopyFrom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      MeshToSet                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::Copy_SetFoliageParameters_FromClass(class UClass* CopyFrom, class UStaticMesh* MeshToSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "Copy&SetFoliageParameters_FromClass");

	Params::INTERACTIVE_FoliageComp_BP_C_Copy_SetFoliageParameters_FromClass Parms{};

	Parms.CopyFrom = CopyFrom;
	Parms.MeshToSet = MeshToSet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.GetCurrentInstanceDeformAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasInstanceData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CurrentAlpha                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::GetCurrentInstanceDeformAlpha(int32 InstanceIndex, bool* HasInstanceData, float* CurrentAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "GetCurrentInstanceDeformAlpha");

	Params::INTERACTIVE_FoliageComp_BP_C_GetCurrentInstanceDeformAlpha Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (HasInstanceData != nullptr)
		*HasInstanceData = Parms.HasInstanceData;

	if (CurrentAlpha != nullptr)
		*CurrentAlpha = Parms.CurrentAlpha;
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.GetCurrentInstanceGPU_Offset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AtSpecifiedAlpha                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   SpecifiedAlpha                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurrentOffset                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::GetCurrentInstanceGPU_Offset(int32 InstanceIndex, bool AtSpecifiedAlpha, float SpecifiedAlpha, struct FVector* CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "GetCurrentInstanceGPU_Offset");

	Params::INTERACTIVE_FoliageComp_BP_C_GetCurrentInstanceGPU_Offset Parms{};

	Parms.InstanceIndex = InstanceIndex;
	Parms.AtSpecifiedAlpha = AtSpecifiedAlpha;
	Parms.SpecifiedAlpha = SpecifiedAlpha;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentOffset != nullptr)
		*CurrentOffset = std::move(Parms.CurrentOffset);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.GetCurrentInstanceUN-DeformAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InstanceIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasInstanceData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CurrentAlpha                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::GetCurrentInstanceUNMinusDeformAlpha(int32 InstanceIndex, bool* HasInstanceData, float* CurrentAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "GetCurrentInstanceUN-DeformAlpha");

	Params::INTERACTIVE_FoliageComp_BP_C_GetCurrentInstanceUNMinusDeformAlpha Parms{};

	Parms.InstanceIndex = InstanceIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (HasInstanceData != nullptr)
		*HasInstanceData = Parms.HasInstanceData;

	if (CurrentAlpha != nullptr)
		*CurrentAlpha = Parms.CurrentAlpha;
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.ForceMarkDirty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UINTERACTIVE_FoliageComp_BP_C::ForceMarkDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "ForceMarkDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACTIVE_FoliageComp_BP.INTERACTIVE_FoliageComp_BP_C.Start New Instance Offset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Instance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeformDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   UnDeformSpeed_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UpdateComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   IgnoreIfGrowing                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UINTERACTIVE_FoliageComp_BP_C::Start_New_Instance_Offset(int32 Instance, const struct FVector& NewOffset, float DeformDuration, float UnDeformSpeed_0, bool UpdateComponent, float IgnoreIfGrowing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACTIVE_FoliageComp_BP_C", "Start New Instance Offset");

	Params::INTERACTIVE_FoliageComp_BP_C_Start_New_Instance_Offset Parms{};

	Parms.Instance = Instance;
	Parms.NewOffset = std::move(NewOffset);
	Parms.DeformDuration = DeformDuration;
	Parms.UnDeformSpeed_0 = UnDeformSpeed_0;
	Parms.UpdateComponent = UpdateComponent;
	Parms.IgnoreIfGrowing = IgnoreIfGrowing;

	UObject::ProcessEvent(Func, &Parms);
}

}

