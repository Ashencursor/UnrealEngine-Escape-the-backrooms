#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MyGameInstance

#include "Basic.hpp"

#include "AdvancedSessions_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MyGameInstance.BP_MyGameInstance_C.ExecuteUbergraph_BP_MyGameInstance
// 0x0568 (0x0568 - 0x0000)
struct BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName_1;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress_1;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_WrittenAchievementName;         // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_WrittenProgress;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WrittenUserTag;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController_3;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Message;                        // 0x00C8(0x0018)()
	class FString                                 K2Node_Select_Default;                             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F0(0x0018)()
	class UW_LoadingScreen_C*                     CallFunc_Create_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_CustomEvent_PlayerController_2;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_WidgetRef;                      // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_ParentRef_1;                    // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_LevelName;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxPlayer;                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsPrivate;                      // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_ServerName;                     // 0x0148(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0174(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                K2Node_CustomEvent_Session;                        // 0x0198(0x0108)()
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_ParentRef;                      // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowLoadingScreen;              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJoinSessionCallbackProxy*              CallFunc_JoinSession_ReturnValue;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x02C4(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_LocalPlayerNum;                       // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         K2Node_Event_PersonInvited;                        // 0x02D8(0x0020)()
	struct FBlueprintSessionResult                K2Node_Event_SessionToJoin;                        // 0x02F8(0x0108)(ConstParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue;               // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0410(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UJoinSessionCallbackProxy*              CallFunc_JoinSession_ReturnValue_1;                // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0434(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         K2Node_Event_PlayerId;                             // 0x0448(0x0020)()
	bool                                          K2Node_Event_bIsTalking;                           // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_AchievementName;                // 0x046C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAchievementWriteCallbackProxy*         CallFunc_WriteAchievementProgress_ReturnValue;     // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALobby_PlayerController_C*              K2Node_DynamicCast_AsLobby_Player_Controller;      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49A[0x6];                                      // 0x049A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAchievementQueryCallbackProxy*         CallFunc_CacheAchievements_ReturnValue;            // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x6];                                      // 0x04AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_CustomEvent_Widget;                         // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MainMenu_C*                          K2Node_DynamicCast_AsW_Main_Menu;                  // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x2];                                      // 0x04CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x04CC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x04DC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_isOverlayActive;                      // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeCPPElements_ReturnValue;        // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    K2Node_DynamicCast_AsBPCharacter_Demo;             // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTearingDown_isTearingDown;           // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x050A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue;  // 0x050B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1; // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_2; // 0x050E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50F[0x1];                                      // 0x050F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDestroySessionCallbackProxy*           CallFunc_DestroySession_ReturnValue_1;             // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetworkFailure                               K2Node_Event_FailureType;                          // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsServer;                            // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_523[0x5];                                      // 0x0523(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_MainMenu_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0528(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UW_MainMenu_C*                          CallFunc_Array_Get_Item;                           // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSessionPropertyKeyPair>        Temp_struct_Variable;                              // 0x0540(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreateSessionCallbackProxyAdvanced*    CallFunc_CreateAdvancedSession_ReturnValue;        // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance");
static_assert(sizeof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance) == 0x000568, "Wrong size on BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, EntryPoint) == 0x000000, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WrittenAchievementName_1) == 0x000004, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WrittenAchievementName_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WrittenProgress_1) == 0x00000C, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WrittenProgress_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WrittenUserTag_1) == 0x000010, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WrittenUserTag_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WrittenAchievementName) == 0x000024, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WrittenProgress) == 0x00002C, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WrittenProgress' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WrittenUserTag) == 0x000030, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WrittenUserTag' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, Temp_int_Variable) == 0x000044, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, Temp_float_Variable) == 0x000048, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, Temp_name_Variable) == 0x00004C, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_2) == 0x000054, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_3) == 0x000064, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_5) == 0x000084, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_MakeLiteralByte_ReturnValue) == 0x000094, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, Temp_bool_Variable) == 0x000095, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, Temp_string_Variable) == 0x000098, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_PlayerController_3) == 0x0000C0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_PlayerController_3' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_Message) == 0x0000C8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Select_Default) == 0x0000E0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Create_ReturnValue) == 0x000108, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_PlayerController_2) == 0x000120, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_PlayerController_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_WidgetRef) == 0x000128, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_WidgetRef' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_ParentRef_1) == 0x000130, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_ParentRef_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_LevelName) == 0x000138, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_LevelName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_MaxPlayer) == 0x000140, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_MaxPlayer' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_IsPrivate) == 0x000144, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_IsPrivate' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_ServerName) == 0x000148, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_ServerName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_6) == 0x000160, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Not_PreBool_ReturnValue) == 0x000170, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue) == 0x000171, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_7) == 0x000174, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_8) == 0x000184, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_Session) == 0x000198, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_Session' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_PlayerController_1) == 0x0002A0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_ParentRef) == 0x0002A8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_ParentRef' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_ShowLoadingScreen) == 0x0002B0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_ShowLoadingScreen' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_JoinSession_ReturnValue) == 0x0002B8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_JoinSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_1) == 0x0002C0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_9) == 0x0002C4, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_LocalPlayerNum) == 0x0002D4, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_LocalPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_PersonInvited) == 0x0002D8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_PersonInvited' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_SessionToJoin) == 0x0002F8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_SessionToJoin' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000400, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_DestroySession_ReturnValue) == 0x000408, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_10) == 0x000410, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_2) == 0x000420, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_JoinSession_ReturnValue_1) == 0x000428, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_JoinSession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_3) == 0x000430, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_11) == 0x000434, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_PlayerId) == 0x000448, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_PlayerId' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_bIsTalking) == 0x000468, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_bIsTalking' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_AchievementName) == 0x00046C, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_AchievementName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetPlayerController_ReturnValue_1) == 0x000478, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetPlayerController_ReturnValue_2) == 0x000480, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_WriteAchievementProgress_ReturnValue) == 0x000488, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_WriteAchievementProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_DynamicCast_AsLobby_Player_Controller) == 0x000490, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_DynamicCast_AsLobby_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_DynamicCast_bSuccess) == 0x000498, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_4) == 0x000499, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_CacheAchievements_ReturnValue) == 0x0004A0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_CacheAchievements_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_5) == 0x0004A8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_6) == 0x0004A9, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_PlayerController) == 0x0004B0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CustomEvent_Widget) == 0x0004B8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CustomEvent_Widget' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_DynamicCast_AsW_Main_Menu) == 0x0004C0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_DynamicCast_AsW_Main_Menu' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_DynamicCast_bSuccess_1) == 0x0004C8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_7) == 0x0004C9, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_12) == 0x0004CC, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_CreateDelegate_OutputDelegate_13) == 0x0004DC, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_isOverlayActive) == 0x0004EC, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_isOverlayActive' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0004F0, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_InitializeCPPElements_ReturnValue) == 0x0004F8, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_InitializeCPPElements_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_DynamicCast_AsBPCharacter_Demo) == 0x000500, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_DynamicCast_AsBPCharacter_Demo' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_DynamicCast_bSuccess_2) == 0x000508, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_K2_IsTearingDown_isTearingDown) == 0x000509, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_K2_IsTearingDown_isTearingDown' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Not_PreBool_ReturnValue_1) == 0x00050A, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue) == 0x00050B, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Not_PreBool_ReturnValue_2) == 0x00050C, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1) == 0x00050D, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_2) == 0x00050E, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsHeadMountedDisplayEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetPlayerController_ReturnValue_3) == 0x000510, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_DestroySession_ReturnValue_1) == 0x000518, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_DestroySession_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_FailureType) == 0x000520, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_FailureType' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, K2Node_Event_bIsServer) == 0x000521, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::K2Node_Event_bIsServer' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_8) == 0x000522, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000528, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Array_Get_Item) == 0x000538, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, Temp_struct_Variable) == 0x000540, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_9) == 0x000550, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_CreateAdvancedSession_ReturnValue) == 0x000558, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_CreateAdvancedSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_IsValid_ReturnValue_10) == 0x000560, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance, CallFunc_Not_PreBool_ReturnValue_3) == 0x000561, "Member 'BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.HandleNetworkError
// 0x0002 (0x0002 - 0x0000)
struct BP_MyGameInstance_C_HandleNetworkError final
{
public:
	ENetworkFailure                               FailureType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsServer;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MyGameInstance_C_HandleNetworkError) == 0x000001, "Wrong alignment on BP_MyGameInstance_C_HandleNetworkError");
static_assert(sizeof(BP_MyGameInstance_C_HandleNetworkError) == 0x000002, "Wrong size on BP_MyGameInstance_C_HandleNetworkError");
static_assert(offsetof(BP_MyGameInstance_C_HandleNetworkError, FailureType) == 0x000000, "Member 'BP_MyGameInstance_C_HandleNetworkError::FailureType' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_HandleNetworkError, bIsServer) == 0x000001, "Member 'BP_MyGameInstance_C_HandleNetworkError::bIsServer' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSteamOverlayIsActive
// 0x0001 (0x0001 - 0x0000)
struct BP_MyGameInstance_C_OnSteamOverlayIsActive final
{
public:
	bool                                          IsOverlayActive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MyGameInstance_C_OnSteamOverlayIsActive) == 0x000001, "Wrong alignment on BP_MyGameInstance_C_OnSteamOverlayIsActive");
static_assert(sizeof(BP_MyGameInstance_C_OnSteamOverlayIsActive) == 0x000001, "Wrong size on BP_MyGameInstance_C_OnSteamOverlayIsActive");
static_assert(offsetof(BP_MyGameInstance_C_OnSteamOverlayIsActive, IsOverlayActive) == 0x000000, "Member 'BP_MyGameInstance_C_OnSteamOverlayIsActive::IsOverlayActive' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.ResetAfterErrorFocus
// 0x0010 (0x0010 - 0x0000)
struct BP_MyGameInstance_C_ResetAfterErrorFocus final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MyGameInstance_C_ResetAfterErrorFocus) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_ResetAfterErrorFocus");
static_assert(sizeof(BP_MyGameInstance_C_ResetAfterErrorFocus) == 0x000010, "Wrong size on BP_MyGameInstance_C_ResetAfterErrorFocus");
static_assert(offsetof(BP_MyGameInstance_C_ResetAfterErrorFocus, PlayerController) == 0x000000, "Member 'BP_MyGameInstance_C_ResetAfterErrorFocus::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ResetAfterErrorFocus, Widget) == 0x000008, "Member 'BP_MyGameInstance_C_ResetAfterErrorFocus::Widget' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.UnlockAchievement
// 0x0008 (0x0008 - 0x0000)
struct BP_MyGameInstance_C_UnlockAchievement final
{
public:
	class FName                                   AchievementName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MyGameInstance_C_UnlockAchievement) == 0x000004, "Wrong alignment on BP_MyGameInstance_C_UnlockAchievement");
static_assert(sizeof(BP_MyGameInstance_C_UnlockAchievement) == 0x000008, "Wrong size on BP_MyGameInstance_C_UnlockAchievement");
static_assert(offsetof(BP_MyGameInstance_C_UnlockAchievement, AchievementName) == 0x000000, "Member 'BP_MyGameInstance_C_UnlockAchievement::AchievementName' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.OnPlayerTalkingStateChanged
// 0x0028 (0x0028 - 0x0000)
struct BP_MyGameInstance_C_OnPlayerTalkingStateChanged final
{
public:
	struct FBPUniqueNetId                         PlayerId;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bIsTalking;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MyGameInstance_C_OnPlayerTalkingStateChanged) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_OnPlayerTalkingStateChanged");
static_assert(sizeof(BP_MyGameInstance_C_OnPlayerTalkingStateChanged) == 0x000028, "Wrong size on BP_MyGameInstance_C_OnPlayerTalkingStateChanged");
static_assert(offsetof(BP_MyGameInstance_C_OnPlayerTalkingStateChanged, PlayerId) == 0x000000, "Member 'BP_MyGameInstance_C_OnPlayerTalkingStateChanged::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnPlayerTalkingStateChanged, bIsTalking) == 0x000020, "Member 'BP_MyGameInstance_C_OnPlayerTalkingStateChanged::bIsTalking' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSessionInviteAccepted
// 0x0130 (0x0130 - 0x0000)
struct BP_MyGameInstance_C_OnSessionInviteAccepted final
{
public:
	int32                                         LocalPlayerNum;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         PersonInvited;                                     // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBlueprintSessionResult                SessionToJoin;                                     // 0x0028(0x0108)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_MyGameInstance_C_OnSessionInviteAccepted) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_OnSessionInviteAccepted");
static_assert(sizeof(BP_MyGameInstance_C_OnSessionInviteAccepted) == 0x000130, "Wrong size on BP_MyGameInstance_C_OnSessionInviteAccepted");
static_assert(offsetof(BP_MyGameInstance_C_OnSessionInviteAccepted, LocalPlayerNum) == 0x000000, "Member 'BP_MyGameInstance_C_OnSessionInviteAccepted::LocalPlayerNum' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnSessionInviteAccepted, PersonInvited) == 0x000008, "Member 'BP_MyGameInstance_C_OnSessionInviteAccepted::PersonInvited' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnSessionInviteAccepted, SessionToJoin) == 0x000028, "Member 'BP_MyGameInstance_C_OnSessionInviteAccepted::SessionToJoin' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.JoinServerSession
// 0x0120 (0x0120 - 0x0000)
struct BP_MyGameInstance_C_JoinServerSession final
{
public:
	struct FBlueprintSessionResult                Session;                                           // 0x0000(0x0108)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      PlayerController;                                  // 0x0108(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ParentRef;                                         // 0x0110(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowLoadingScreen_0;                               // 0x0118(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MyGameInstance_C_JoinServerSession) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_JoinServerSession");
static_assert(sizeof(BP_MyGameInstance_C_JoinServerSession) == 0x000120, "Wrong size on BP_MyGameInstance_C_JoinServerSession");
static_assert(offsetof(BP_MyGameInstance_C_JoinServerSession, Session) == 0x000000, "Member 'BP_MyGameInstance_C_JoinServerSession::Session' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_JoinServerSession, PlayerController) == 0x000108, "Member 'BP_MyGameInstance_C_JoinServerSession::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_JoinServerSession, ParentRef) == 0x000110, "Member 'BP_MyGameInstance_C_JoinServerSession::ParentRef' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_JoinServerSession, ShowLoadingScreen_0) == 0x000118, "Member 'BP_MyGameInstance_C_JoinServerSession::ShowLoadingScreen_0' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.CreateServer
// 0x0040 (0x0040 - 0x0000)
struct BP_MyGameInstance_C_CreateServer final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                WidgetRef;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ParentRef;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LevelName;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPlayer;                                         // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPrivate;                                         // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ServerName;                                        // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MyGameInstance_C_CreateServer) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_CreateServer");
static_assert(sizeof(BP_MyGameInstance_C_CreateServer) == 0x000040, "Wrong size on BP_MyGameInstance_C_CreateServer");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, PlayerController) == 0x000000, "Member 'BP_MyGameInstance_C_CreateServer::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, WidgetRef) == 0x000008, "Member 'BP_MyGameInstance_C_CreateServer::WidgetRef' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, ParentRef) == 0x000010, "Member 'BP_MyGameInstance_C_CreateServer::ParentRef' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, LevelName) == 0x000018, "Member 'BP_MyGameInstance_C_CreateServer::LevelName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, MaxPlayer) == 0x000020, "Member 'BP_MyGameInstance_C_CreateServer::MaxPlayer' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, IsPrivate) == 0x000024, "Member 'BP_MyGameInstance_C_CreateServer::IsPrivate' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CreateServer, ServerName) == 0x000028, "Member 'BP_MyGameInstance_C_CreateServer::ServerName' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.ShowLoadingScreen
// 0x0020 (0x0020 - 0x0000)
struct BP_MyGameInstance_C_ShowLoadingScreen final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Message;                                           // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MyGameInstance_C_ShowLoadingScreen) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_ShowLoadingScreen");
static_assert(sizeof(BP_MyGameInstance_C_ShowLoadingScreen) == 0x000020, "Wrong size on BP_MyGameInstance_C_ShowLoadingScreen");
static_assert(offsetof(BP_MyGameInstance_C_ShowLoadingScreen, PlayerController) == 0x000000, "Member 'BP_MyGameInstance_C_ShowLoadingScreen::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_ShowLoadingScreen, Message) == 0x000008, "Member 'BP_MyGameInstance_C_ShowLoadingScreen::Message' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F
// 0x0010 (0x0010 - 0x0000)
struct BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F) == 0x000004, "Wrong alignment on BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F");
static_assert(sizeof(BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F) == 0x000010, "Wrong size on BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F");
static_assert(offsetof(BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F, WrittenAchievementName) == 0x000000, "Member 'BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F, WrittenProgress) == 0x000008, "Member 'BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F::WrittenProgress' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F, WrittenUserTag) == 0x00000C, "Member 'BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F::WrittenUserTag' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F
// 0x0010 (0x0010 - 0x0000)
struct BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F final
{
public:
	class FName                                   WrittenAchievementName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WrittenProgress;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WrittenUserTag;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F) == 0x000004, "Wrong alignment on BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F");
static_assert(sizeof(BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F) == 0x000010, "Wrong size on BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F");
static_assert(offsetof(BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F, WrittenAchievementName) == 0x000000, "Member 'BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F::WrittenAchievementName' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F, WrittenProgress) == 0x000008, "Member 'BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F::WrittenProgress' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F, WrittenUserTag) == 0x00000C, "Member 'BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F::WrittenUserTag' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.GenerateCode
// 0x0058 (0x0058 - 0x0000)
struct BP_MyGameInstance_C_GenerateCode final
{
public:
	TArray<class FString>                         CharacterSet;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MyGameInstance_C_GenerateCode) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_GenerateCode");
static_assert(sizeof(BP_MyGameInstance_C_GenerateCode) == 0x000058, "Wrong size on BP_MyGameInstance_C_GenerateCode");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, CharacterSet) == 0x000000, "Member 'BP_MyGameInstance_C_GenerateCode::CharacterSet' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, Temp_int_Variable) == 0x000010, "Member 'BP_MyGameInstance_C_GenerateCode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_MyGameInstance_C_GenerateCode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MyGameInstance_C_GenerateCode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_MyGameInstance_C_GenerateCode::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, CallFunc_RandomInteger_ReturnValue) == 0x000030, "Member 'BP_MyGameInstance_C_GenerateCode::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_MyGameInstance_C_GenerateCode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_GenerateCode, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_MyGameInstance_C_GenerateCode::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.CheckCodeUnique
// 0x0028 (0x0028 - 0x0000)
struct BP_MyGameInstance_C_CheckCodeUnique final
{
public:
	struct FSessionsSearchSetting                 Code_0;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_MyGameInstance_C_CheckCodeUnique) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_CheckCodeUnique");
static_assert(sizeof(BP_MyGameInstance_C_CheckCodeUnique) == 0x000028, "Wrong size on BP_MyGameInstance_C_CheckCodeUnique");
static_assert(offsetof(BP_MyGameInstance_C_CheckCodeUnique, Code_0) == 0x000000, "Member 'BP_MyGameInstance_C_CheckCodeUnique::Code_0' has a wrong offset!");

// Function BP_MyGameInstance.BP_MyGameInstance_C.CheckShouldDisplayEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_MyGameInstance_C_CheckShouldDisplayEvent final
{
public:
	class UBP_SG_GameSettings_C*                  CallFunc_LoadSettings_SaveGame;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MyGameInstance_C_CheckShouldDisplayEvent) == 0x000008, "Wrong alignment on BP_MyGameInstance_C_CheckShouldDisplayEvent");
static_assert(sizeof(BP_MyGameInstance_C_CheckShouldDisplayEvent) == 0x000010, "Wrong size on BP_MyGameInstance_C_CheckShouldDisplayEvent");
static_assert(offsetof(BP_MyGameInstance_C_CheckShouldDisplayEvent, CallFunc_LoadSettings_SaveGame) == 0x000000, "Member 'BP_MyGameInstance_C_CheckShouldDisplayEvent::CallFunc_LoadSettings_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CheckShouldDisplayEvent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'BP_MyGameInstance_C_CheckShouldDisplayEvent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MyGameInstance_C_CheckShouldDisplayEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_MyGameInstance_C_CheckShouldDisplayEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

