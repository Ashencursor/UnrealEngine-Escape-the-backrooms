#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Player_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "HorrorEngineSettings_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FootstepActionsEnum_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Player_AnimBP.Player_AnimBP_C
// 0x18D0 (0x1B90 - 0x02C0)
class UPlayer_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0668(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0690(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x06B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x06E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0708(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0730(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0758(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x0780(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x0800(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x0830(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x08B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x08E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0960(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0990(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0A78(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0AA8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0B90(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0BC0(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x0CA8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x0CD8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x0D58(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0D88(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0E08(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0E38(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0F20(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0F50(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0FD0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1000(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1080(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x10B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1130(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1160(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1248(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1278(0x00B0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1328(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1348(0x0108)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1450(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1470(0x0158)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x15C8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x15F0(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x16B0(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x16D8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1720(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1748(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1790(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x17D8(0x00A0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x18A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x18C8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1948(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1978(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x19F8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1A28(0x00B0)()
	float                                         Speed;                                             // 0x1AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Direction;                                         // 0x1ADC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x1AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableJump;                                        // 0x1AE4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Jumping;                                           // 0x1AE5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Crouching;                                         // 0x1AE6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AE7[0x1];                                     // 0x1AE7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHorrorEngineSettings                  GameSettings;                                      // 0x1AE8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flashlight;                                        // 0x1B88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsClimbing;                                        // 0x1B89(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingRope;                                       // 0x1B8A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSwimming;                                        // 0x1B8B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsClimbingLadder;                                  // 0x1B8C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPushing;                                         // 0x1B8D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Player_AnimBP(int32 EntryPoint);
	void AnimNotify_Footstep();
	void AnimNotify_JogStart();
	void AnimNotify_IdleStart();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_70407C274BEF3F98B2074081AD73562C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_8DDCF4304C2E9BF9AD2B4DBD15E09ADA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_FC657DF04DEC2D34EB1F5E9D8DA3585F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_4DD6B8964B5A15FEF747B29AC704397C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_00A020874CAD9BCB7814E49F276A75B6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_33A3D98C462B5FDCEE9906AC4E7F6523();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_45D00BC84483FE6E28C0698DDB63CE73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_08797B7044118E77ECE0F4A1FBF52EB3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_FE0BD3544EFC9F6E8F351BB09206DB4B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_TransitionResult_102E54AC4DB20322FC32B68F97E4D11C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_Player_AnimBP_AnimGraphNode_ModifyBone_851E529B4BE2F5BD610AF8A256000C92();
	void Footstep(EFootstepActionsEnum FootstepType);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Player_AnimBP_C">();
	}
	static class UPlayer_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayer_AnimBP_C>();
	}
};
static_assert(alignof(UPlayer_AnimBP_C) == 0x000010, "Wrong alignment on UPlayer_AnimBP_C");
static_assert(sizeof(UPlayer_AnimBP_C) == 0x001B90, "Wrong size on UPlayer_AnimBP_C");
static_assert(offsetof(UPlayer_AnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UPlayer_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_30) == 0x0002F8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_29) == 0x000320, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_28) == 0x000348, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_27) == 0x000370, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_26) == 0x000398, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_25) == 0x0003C0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_24) == 0x0003E8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_23) == 0x000410, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_22) == 0x000438, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_21) == 0x000460, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_20) == 0x000488, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_19) == 0x0004B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_18) == 0x0004D8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_17) == 0x000500, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_16) == 0x000528, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x000550, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x000578, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x0005A0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x0005C8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x0005F0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x000618, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x000640, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x000668, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x000690, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x0006B8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0006E0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x000708, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x000730, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x000758, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x000780, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_14) == 0x000800, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x000830, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_13) == 0x0008B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x0008E0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_12) == 0x000960, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000990, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_11) == 0x000A78, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000AA8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_10) == 0x000B90, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000BC0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_9) == 0x000CA8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x000CD8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_8) == 0x000D58, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x000D88, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_7) == 0x000E08, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000E38, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_6) == 0x000F20, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x000F50, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_5) == 0x000FD0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x001000, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_4) == 0x001080, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x0010B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_3) == 0x001130, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x001160, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_2) == 0x001248, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x001278, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001328, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ModifyBone) == 0x001348, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x001450, "Member 'UPlayer_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001470, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x0015C8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x0015F0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x0016B0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Slot_2) == 0x0016D8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x001720, "Member 'UPlayer_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Slot_1) == 0x001748, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_Slot) == 0x001790, "Member 'UPlayer_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x0017D8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x001878, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0018A0, "Member 'UPlayer_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0018C8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult_1) == 0x001948, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001978, "Member 'UPlayer_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateResult) == 0x0019F8, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, AnimGraphNode_StateMachine) == 0x001A28, "Member 'UPlayer_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Speed) == 0x001AD8, "Member 'UPlayer_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Direction) == 0x001ADC, "Member 'UPlayer_AnimBP_C::Direction' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Pitch) == 0x001AE0, "Member 'UPlayer_AnimBP_C::Pitch' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, EnableJump) == 0x001AE4, "Member 'UPlayer_AnimBP_C::EnableJump' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Jumping) == 0x001AE5, "Member 'UPlayer_AnimBP_C::Jumping' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Crouching) == 0x001AE6, "Member 'UPlayer_AnimBP_C::Crouching' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, GameSettings) == 0x001AE8, "Member 'UPlayer_AnimBP_C::GameSettings' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, Flashlight) == 0x001B88, "Member 'UPlayer_AnimBP_C::Flashlight' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, IsClimbing) == 0x001B89, "Member 'UPlayer_AnimBP_C::IsClimbing' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, HoldingRope) == 0x001B8A, "Member 'UPlayer_AnimBP_C::HoldingRope' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, IsSwimming) == 0x001B8B, "Member 'UPlayer_AnimBP_C::IsSwimming' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, IsClimbingLadder) == 0x001B8C, "Member 'UPlayer_AnimBP_C::IsClimbingLadder' has a wrong offset!");
static_assert(offsetof(UPlayer_AnimBP_C, IsPushing) == 0x001B8D, "Member 'UPlayer_AnimBP_C::IsPushing' has a wrong offset!");

}

