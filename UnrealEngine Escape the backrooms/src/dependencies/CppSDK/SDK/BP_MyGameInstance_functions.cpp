#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MyGameInstance

#include "Basic.hpp"

#include "BP_MyGameInstance_classes.hpp"
#include "BP_MyGameInstance_parameters.hpp"


namespace SDK
{

// Function BP_MyGameInstance.BP_MyGameInstance_C.ExecuteUbergraph_BP_MyGameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MyGameInstance_C::ExecuteUbergraph_BP_MyGameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "ExecuteUbergraph_BP_MyGameInstance");

	Params::BP_MyGameInstance_C_ExecuteUbergraph_BP_MyGameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.HandleNetworkError
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsServer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MyGameInstance_C::HandleNetworkError(ENetworkFailure FailureType, bool bIsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "HandleNetworkError");

	Params::BP_MyGameInstance_C_HandleNetworkError Parms{};

	Parms.FailureType = FailureType;
	Parms.bIsServer = bIsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.ReceiveShutdown
// (Event, Public, BlueprintEvent)

void UBP_MyGameInstance_C::ReceiveShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "ReceiveShutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSteamOverlayIsActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsOverlayActive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MyGameInstance_C::OnSteamOverlayIsActive(bool IsOverlayActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSteamOverlayIsActive");

	Params::BP_MyGameInstance_C_OnSteamOverlayIsActive Parms{};

	Parms.IsOverlayActive = IsOverlayActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.ResetAfterErrorFocus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MyGameInstance_C::ResetAfterErrorFocus(class APlayerController* PlayerController, class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "ResetAfterErrorFocus");

	Params::BP_MyGameInstance_C_ResetAfterErrorFocus Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.UnlockAchievement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             AchievementName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MyGameInstance_C::UnlockAchievement(class FName AchievementName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "UnlockAchievement");

	Params::BP_MyGameInstance_C_UnlockAchievement Parms{};

	Parms.AchievementName = AchievementName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnPlayerTalkingStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FBPUniqueNetId                   PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bIsTalking                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MyGameInstance_C::OnPlayerTalkingStateChanged(const struct FBPUniqueNetId& PlayerId, bool bIsTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnPlayerTalkingStateChanged");

	Params::BP_MyGameInstance_C_OnPlayerTalkingStateChanged Parms{};

	Parms.PlayerId = std::move(PlayerId);
	Parms.bIsTalking = bIsTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSessionInviteAccepted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   LocalPlayerNum                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBPUniqueNetId                   PersonInvited                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FBlueprintSessionResult          SessionToJoin                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_MyGameInstance_C::OnSessionInviteAccepted(int32 LocalPlayerNum, const struct FBPUniqueNetId& PersonInvited, const struct FBlueprintSessionResult& SessionToJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSessionInviteAccepted");

	Params::BP_MyGameInstance_C_OnSessionInviteAccepted Parms{};

	Parms.LocalPlayerNum = LocalPlayerNum;
	Parms.PersonInvited = std::move(PersonInvited);
	Parms.SessionToJoin = std::move(SessionToJoin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UBP_MyGameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.Initialize_AudioSettings
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::Initialize_AudioSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "Initialize_AudioSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.JoinServerSession
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBlueprintSessionResult          Session                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ParentRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowLoadingScreen_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MyGameInstance_C::JoinServerSession(const struct FBlueprintSessionResult& Session, class APlayerController* PlayerController, class UWidget* ParentRef, bool ShowLoadingScreen_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "JoinServerSession");

	Params::BP_MyGameInstance_C_JoinServerSession Parms{};

	Parms.Session = std::move(Session);
	Parms.PlayerController = PlayerController;
	Parms.ParentRef = ParentRef;
	Parms.ShowLoadingScreen_0 = ShowLoadingScreen_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.CreateServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          WidgetRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ParentRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LevelName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPrivate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             ServerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_MyGameInstance_C::CreateServer(class APlayerController* PlayerController, class UWidget* WidgetRef, class UWidget* ParentRef, class FName LevelName, int32 MaxPlayer, bool IsPrivate, const class FText& ServerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "CreateServer");

	Params::BP_MyGameInstance_C_CreateServer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.WidgetRef = WidgetRef;
	Parms.ParentRef = ParentRef;
	Parms.LevelName = LevelName;
	Parms.MaxPlayer = MaxPlayer;
	Parms.IsPrivate = IsPrivate;
	Parms.ServerName = std::move(ServerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.ShowLoadingScreen
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_MyGameInstance_C::ShowLoadingScreen(class APlayerController* PlayerController, const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "ShowLoadingScreen");

	Params::BP_MyGameInstance_C_ShowLoadingScreen Parms{};

	Parms.PlayerController = PlayerController;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_CE0E125D465CF87986EDACB437749973
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnSuccess_CE0E125D465CF87986EDACB437749973()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_CE0E125D465CF87986EDACB437749973");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_CE0E125D465CF87986EDACB437749973
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnFailure_CE0E125D465CF87986EDACB437749973()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_CE0E125D465CF87986EDACB437749973");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_4A8E1BF4489B644EBB46CCB5CE87A8FB
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnSuccess_4A8E1BF4489B644EBB46CCB5CE87A8FB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_4A8E1BF4489B644EBB46CCB5CE87A8FB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_4A8E1BF4489B644EBB46CCB5CE87A8FB
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnFailure_4A8E1BF4489B644EBB46CCB5CE87A8FB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_4A8E1BF4489B644EBB46CCB5CE87A8FB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MyGameInstance_C::OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F");

	Params::BP_MyGameInstance_C_OnSuccess_F6A1C64C4BF407E4C67D4F8266759C0F Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             WrittenAchievementName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WrittenProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WrittenUserTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MyGameInstance_C::OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F(class FName WrittenAchievementName, float WrittenProgress, int32 WrittenUserTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F");

	Params::BP_MyGameInstance_C_OnFailure_F6A1C64C4BF407E4C67D4F8266759C0F Parms{};

	Parms.WrittenAchievementName = WrittenAchievementName;
	Parms.WrittenProgress = WrittenProgress;
	Parms.WrittenUserTag = WrittenUserTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_CAE6F30D4DC345FC9711EAB8167D6CDE
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnSuccess_CAE6F30D4DC345FC9711EAB8167D6CDE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_CAE6F30D4DC345FC9711EAB8167D6CDE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_CAE6F30D4DC345FC9711EAB8167D6CDE
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnFailure_CAE6F30D4DC345FC9711EAB8167D6CDE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_CAE6F30D4DC345FC9711EAB8167D6CDE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_3A8DCEEA406564302B3F52A5D035B982
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnSuccess_3A8DCEEA406564302B3F52A5D035B982()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_3A8DCEEA406564302B3F52A5D035B982");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_3A8DCEEA406564302B3F52A5D035B982
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnFailure_3A8DCEEA406564302B3F52A5D035B982()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_3A8DCEEA406564302B3F52A5D035B982");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_D7E8A28A46B4BD5B7318A6A66AFD14E2
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnSuccess_D7E8A28A46B4BD5B7318A6A66AFD14E2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_D7E8A28A46B4BD5B7318A6A66AFD14E2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_D7E8A28A46B4BD5B7318A6A66AFD14E2
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnFailure_D7E8A28A46B4BD5B7318A6A66AFD14E2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_D7E8A28A46B4BD5B7318A6A66AFD14E2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnSuccess_B065C47F48B157C121B06CAFCED8C6AC
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnSuccess_B065C47F48B157C121B06CAFCED8C6AC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnSuccess_B065C47F48B157C121B06CAFCED8C6AC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.OnFailure_B065C47F48B157C121B06CAFCED8C6AC
// (BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::OnFailure_B065C47F48B157C121B06CAFCED8C6AC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "OnFailure_B065C47F48B157C121B06CAFCED8C6AC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.GenerateCode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::GenerateCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "GenerateCode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.CheckCodeUnique
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSessionsSearchSetting           Code_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_MyGameInstance_C::CheckCodeUnique(const struct FSessionsSearchSetting& Code_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "CheckCodeUnique");

	Params::BP_MyGameInstance_C_CheckCodeUnique Parms{};

	Parms.Code_0 = std::move(Code_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.ResetInput
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::ResetInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "ResetInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MyGameInstance.BP_MyGameInstance_C.CheckShouldDisplayEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_MyGameInstance_C::CheckShouldDisplayEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MyGameInstance_C", "CheckShouldDisplayEvent");

	UObject::ProcessEvent(Func, nullptr);
}

}

