#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Howler_BP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Howler_BP.Howler_BP_C.ExecuteUbergraph_Howler_BP
// 0x00A8 (0x00A8 - 0x0000)
struct Howler_BP_C_ExecuteUbergraph_Howler_BP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult_1;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          K2Node_CustomEvent_MovementResult;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPathFollowingResult MovementResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	EPathFollowingResult                          Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAIAsyncTaskBlueprintProxy*             CallFunc_CreateMoveToProxyObject_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABPCharacter_Demo_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Howler_BP_C_ExecuteUbergraph_Howler_BP) == 0x000008, "Wrong alignment on Howler_BP_C_ExecuteUbergraph_Howler_BP");
static_assert(sizeof(Howler_BP_C_ExecuteUbergraph_Howler_BP) == 0x0000A8, "Wrong size on Howler_BP_C_ExecuteUbergraph_Howler_BP");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, EntryPoint) == 0x000000, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::EntryPoint' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, K2Node_CustomEvent_MovementResult_1) == 0x000010, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::K2Node_CustomEvent_MovementResult_1' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, K2Node_CustomEvent_MovementResult) == 0x000024, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::K2Node_CustomEvent_MovementResult' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, Temp_byte_Variable) == 0x000038, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_CreateMoveToProxyObject_ReturnValue) == 0x000050, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_CreateMoveToProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000068, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_FindLookAtRotation_ReturnValue) == 0x000074, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_GetActorOfClass_ReturnValue) == 0x000090, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_ExecuteUbergraph_Howler_BP, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000A4, "Member 'Howler_BP_C_ExecuteUbergraph_Howler_BP::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Howler_BP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Howler_BP_C_ReceiveTick) == 0x000004, "Wrong alignment on Howler_BP_C_ReceiveTick");
static_assert(sizeof(Howler_BP_C_ReceiveTick) == 0x000004, "Wrong size on Howler_BP_C_ReceiveTick");
static_assert(offsetof(Howler_BP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Howler_BP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.OnSuccess_EF39D1F748D7143EACEEED91701EE4FB
// 0x0001 (0x0001 - 0x0000)
struct Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB) == 0x000001, "Wrong alignment on Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB");
static_assert(sizeof(Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB) == 0x000001, "Wrong size on Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB");
static_assert(offsetof(Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB, MovementResult) == 0x000000, "Member 'Howler_BP_C_OnSuccess_EF39D1F748D7143EACEEED91701EE4FB::MovementResult' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.OnFail_EF39D1F748D7143EACEEED91701EE4FB
// 0x0001 (0x0001 - 0x0000)
struct Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB final
{
public:
	EPathFollowingResult                          MovementResult;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB) == 0x000001, "Wrong alignment on Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB");
static_assert(sizeof(Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB) == 0x000001, "Wrong size on Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB");
static_assert(offsetof(Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB, MovementResult) == 0x000000, "Member 'Howler_BP_C_OnFail_EF39D1F748D7143EACEEED91701EE4FB::MovementResult' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.SetShouldMove
// 0x0008 (0x0008 - 0x0000)
struct Howler_BP_C_SetShouldMove final
{
public:
	class ABPCharacter_Demo_C*                    CallFunc_GetActorOfClass_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Howler_BP_C_SetShouldMove) == 0x000008, "Wrong alignment on Howler_BP_C_SetShouldMove");
static_assert(sizeof(Howler_BP_C_SetShouldMove) == 0x000008, "Wrong size on Howler_BP_C_SetShouldMove");
static_assert(offsetof(Howler_BP_C_SetShouldMove, CallFunc_GetActorOfClass_ReturnValue) == 0x000000, "Member 'Howler_BP_C_SetShouldMove::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.CalcLookAtRotation
// 0x0010 (0x0010 - 0x0000)
struct Howler_BP_C_CalcLookAtRotation final
{
public:
	class AActor*                                 MyActor;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Howler_BP_C_CalcLookAtRotation) == 0x000008, "Wrong alignment on Howler_BP_C_CalcLookAtRotation");
static_assert(sizeof(Howler_BP_C_CalcLookAtRotation) == 0x000010, "Wrong size on Howler_BP_C_CalcLookAtRotation");
static_assert(offsetof(Howler_BP_C_CalcLookAtRotation, MyActor) == 0x000000, "Member 'Howler_BP_C_CalcLookAtRotation::MyActor' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_CalcLookAtRotation, Target_0) == 0x000008, "Member 'Howler_BP_C_CalcLookAtRotation::Target_0' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.SetNewSpeed
// 0x000C (0x000C - 0x0000)
struct Howler_BP_C_SetNewSpeed final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewSpeed;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Howler_BP_C_SetNewSpeed) == 0x000004, "Wrong alignment on Howler_BP_C_SetNewSpeed");
static_assert(sizeof(Howler_BP_C_SetNewSpeed) == 0x00000C, "Wrong size on Howler_BP_C_SetNewSpeed");
static_assert(offsetof(Howler_BP_C_SetNewSpeed, Count) == 0x000000, "Member 'Howler_BP_C_SetNewSpeed::Count' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_SetNewSpeed, NewSpeed) == 0x000004, "Member 'Howler_BP_C_SetNewSpeed::NewSpeed' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_SetNewSpeed, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'Howler_BP_C_SetNewSpeed::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function Howler_BP.Howler_BP_C.UpdateSpeed
// 0x0018 (0x0018 - 0x0000)
struct Howler_BP_C_UpdateSpeed final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNewSpeed_NewSpeed;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNewSpeed_NewSpeed_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetNewSpeed_NewSpeed_2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Howler_BP_C_UpdateSpeed) == 0x000004, "Wrong alignment on Howler_BP_C_UpdateSpeed");
static_assert(sizeof(Howler_BP_C_UpdateSpeed) == 0x000018, "Wrong size on Howler_BP_C_UpdateSpeed");
static_assert(offsetof(Howler_BP_C_UpdateSpeed, Temp_int_Variable) == 0x000000, "Member 'Howler_BP_C_UpdateSpeed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_UpdateSpeed, CallFunc_SetNewSpeed_NewSpeed) == 0x000004, "Member 'Howler_BP_C_UpdateSpeed::CallFunc_SetNewSpeed_NewSpeed' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_UpdateSpeed, CallFunc_SetNewSpeed_NewSpeed_1) == 0x000008, "Member 'Howler_BP_C_UpdateSpeed::CallFunc_SetNewSpeed_NewSpeed_1' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_UpdateSpeed, CallFunc_SetNewSpeed_NewSpeed_2) == 0x00000C, "Member 'Howler_BP_C_UpdateSpeed::CallFunc_SetNewSpeed_NewSpeed_2' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_UpdateSpeed, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'Howler_BP_C_UpdateSpeed::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Howler_BP_C_UpdateSpeed, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Howler_BP_C_UpdateSpeed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

