#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Kicked

#include "Basic.hpp"

#include "W_Kicked_classes.hpp"
#include "W_Kicked_parameters.hpp"


namespace SDK
{

// Function W_Kicked.W_Kicked_C.ExecuteUbergraph_W_Kicked
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Kicked_C::ExecuteUbergraph_W_Kicked(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "ExecuteUbergraph_W_Kicked");

	Params::W_Kicked_C_ExecuteUbergraph_W_Kicked Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Kicked.W_Kicked_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Kicked_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "Tick");

	Params::W_Kicked_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Kicked.W_Kicked_C.ShowKicked
// (BlueprintCallable, BlueprintEvent)

void UW_Kicked_C::ShowKicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "ShowKicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Kicked.W_Kicked_C.BndEvt__Button_Yes_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UW_Kicked_C::BndEvt__Button_Yes_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "BndEvt__Button_Yes_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Kicked.W_Kicked_C.RefreshFocus
// (BlueprintCallable, BlueprintEvent)

void UW_Kicked_C::RefreshFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "RefreshFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Kicked.W_Kicked_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_Kicked_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Kicked.W_Kicked_C.BndEvt__Button_Yes_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_Kicked_C::BndEvt__Button_Yes_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "BndEvt__Button_Yes_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Kicked.W_Kicked_C.UpdateConfirmation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// E_Comfirmation                          ConfirmationFor_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_Kicked_C::UpdateConfirmation(const class FText& Title, const class FText& Message, E_Comfirmation ConfirmationFor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "UpdateConfirmation");

	Params::W_Kicked_C_UpdateConfirmation Parms{};

	Parms.Title = std::move(Title);
	Parms.Message = std::move(Message);
	Parms.ConfirmationFor_0 = ConfirmationFor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_Kicked.W_Kicked_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_Kicked_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "OnMouseButtonUp");

	Params::W_Kicked_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_Kicked.W_Kicked_C.PlayClickSound
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Kicked_C::PlayClickSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "PlayClickSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_Kicked.W_Kicked_C.PlayHoveredSound
// (Public, BlueprintCallable, BlueprintEvent)

void UW_Kicked_C::PlayHoveredSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_Kicked_C", "PlayHoveredSound");

	UObject::ProcessEvent(Func, nullptr);
}

}

