#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Kicked

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "E_Comfirmation_structs.hpp"


namespace SDK::Params
{

// Function W_Kicked.W_Kicked_C.ExecuteUbergraph_W_Kicked
// 0x00B8 (0x00B8 - 0x0000)
struct W_Kicked_C_ExecuteUbergraph_W_Kicked final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MyGameInstance_C*                   K2Node_DynamicCast_AsBP_My_Game_Instance;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Title;                                // 0x0020(0x0018)()
	class FText                                   K2Node_Event_Message;                              // 0x0038(0x0018)()
	E_Comfirmation                                K2Node_Event_ConfirmationFor;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x006C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Kicked_C_ExecuteUbergraph_W_Kicked) == 0x000008, "Wrong alignment on W_Kicked_C_ExecuteUbergraph_W_Kicked");
static_assert(sizeof(W_Kicked_C_ExecuteUbergraph_W_Kicked) == 0x0000B8, "Wrong size on W_Kicked_C_ExecuteUbergraph_W_Kicked");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, EntryPoint) == 0x000000, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_DynamicCast_AsBP_My_Game_Instance) == 0x000010, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_DynamicCast_AsBP_My_Game_Instance' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, Temp_bool_Has_Been_Initd_Variable) == 0x00001A, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_Event_Title) == 0x000020, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_Event_Title' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_Event_Message) == 0x000038, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_Event_ConfirmationFor) == 0x000050, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_Event_ConfirmationFor' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000060, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, Temp_bool_Has_Been_Initd_Variable_1) == 0x000068, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, Temp_bool_IsClosed_Variable_1) == 0x000069, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_Event_MyGeometry) == 0x00006C, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, K2Node_Event_InDeltaTime) == 0x0000A4, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0000A8, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_ExecuteUbergraph_W_Kicked, CallFunc_HasUserFocus_ReturnValue) == 0x0000B0, "Member 'W_Kicked_C_ExecuteUbergraph_W_Kicked::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");

// Function W_Kicked.W_Kicked_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_Kicked_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Kicked_C_Tick) == 0x000004, "Wrong alignment on W_Kicked_C_Tick");
static_assert(sizeof(W_Kicked_C_Tick) == 0x00003C, "Wrong size on W_Kicked_C_Tick");
static_assert(offsetof(W_Kicked_C_Tick, MyGeometry) == 0x000000, "Member 'W_Kicked_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_Tick, InDeltaTime) == 0x000038, "Member 'W_Kicked_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_Kicked.W_Kicked_C.UpdateConfirmation
// 0x0038 (0x0038 - 0x0000)
struct W_Kicked_C_UpdateConfirmation final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Message;                                           // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	E_Comfirmation                                ConfirmationFor_0;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Kicked_C_UpdateConfirmation) == 0x000008, "Wrong alignment on W_Kicked_C_UpdateConfirmation");
static_assert(sizeof(W_Kicked_C_UpdateConfirmation) == 0x000038, "Wrong size on W_Kicked_C_UpdateConfirmation");
static_assert(offsetof(W_Kicked_C_UpdateConfirmation, Title) == 0x000000, "Member 'W_Kicked_C_UpdateConfirmation::Title' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_UpdateConfirmation, Message) == 0x000018, "Member 'W_Kicked_C_UpdateConfirmation::Message' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_UpdateConfirmation, ConfirmationFor_0) == 0x000030, "Member 'W_Kicked_C_UpdateConfirmation::ConfirmationFor_0' has a wrong offset!");

// Function W_Kicked.W_Kicked_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct W_Kicked_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(W_Kicked_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on W_Kicked_C_OnMouseButtonUp");
static_assert(sizeof(W_Kicked_C_OnMouseButtonUp) == 0x000218, "Wrong size on W_Kicked_C_OnMouseButtonUp");
static_assert(offsetof(W_Kicked_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'W_Kicked_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'W_Kicked_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'W_Kicked_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Kicked_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'W_Kicked_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

